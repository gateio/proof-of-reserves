$schema: "http://json-schema.org/draft-06/schema#"

title: compute v1 OutlierDetection export schema
description: A gcloud export/import command YAML validation schema.
type: object
additionalProperties: false
properties:
  COMMENT:
    type: object
    description: User specified info ignored by gcloud import.
    additionalProperties: false
    properties:
      template-id:
        type: string
      region:
        type: string
      description:
        type: string
      date:
        type: string
      version:
        type: string
  UNKNOWN:
    type: array
    description: Unknown API fields that cannot be imported.
    items:
      type: string
  baseEjectionTime:
    description: |-
      The base time that a backend endpoint is ejected for. Defaults to 30000ms
      or 30s. After a backend endpoint is returned back to the load balancing
      pool, it can be ejected again in another ejection analysis. Thus, the
      total ejection time is equal to the base ejection time multiplied by the
      number of times the backend endpoint has been ejected. Defaults to 30000ms
      or 30s.
    $ref: Duration.yaml
  consecutiveErrors:
    description: |-
      Number of consecutive errors before a backend endpoint is ejected from the
      load balancing pool. When the backend endpoint is accessed over HTTP, a
      5xx return code qualifies as an error. Defaults to 5.
    type: integer
  consecutiveGatewayFailure:
    description: |-
      The number of consecutive gateway failures (502, 503, 504 status or
      connection errors that are mapped to one of those status codes) before a
      consecutive gateway failure ejection occurs. Defaults to 3.
    type: integer
  enforcingConsecutiveErrors:
    description: |-
      The percentage chance that a backend endpoint will be ejected when an
      outlier status is detected through consecutive 5xx. This setting can be
      used to disable ejection or to ramp it up slowly. Defaults to 0.
    type: integer
  enforcingConsecutiveGatewayFailure:
    description: |-
      The percentage chance that a backend endpoint will be ejected when an
      outlier status is detected through consecutive gateway failures. This
      setting can be used to disable ejection or to ramp it up slowly. Defaults
      to 100.
    type: integer
  enforcingSuccessRate:
    description: |-
      The percentage chance that a backend endpoint will be ejected when an
      outlier status is detected through success rate statistics. This setting
      can be used to disable ejection or to ramp it up slowly. Defaults to 100.
      Not supported when the backend service uses Serverless NEG.
    type: integer
  interval:
    description: |-
      Time interval between ejection analysis sweeps. This can result in both
      new ejections and backend endpoints being returned to service. The
      interval is equal to the number of seconds as defined in
      outlierDetection.interval.seconds plus the number of nanoseconds as
      defined in outlierDetection.interval.nanos. Defaults to 1 second.
    $ref: Duration.yaml
  maxEjectionPercent:
    description: |-
      Maximum percentage of backend endpoints in the load balancing pool for the
      backend service that can be ejected if the ejection conditions are met.
      Defaults to 50%.
    type: integer
  successRateMinimumHosts:
    description: |-
      The number of backend endpoints in the load balancing pool that must have
      enough request volume to detect success rate outliers. If the number of
      backend endpoints is fewer than this setting, outlier detection via
      success rate statistics is not performed for any backend endpoint in the
      load balancing pool. Defaults to 5. Not supported when the backend service
      uses Serverless NEG.
    type: integer
  successRateRequestVolume:
    description: |-
      The minimum number of total requests that must be collected in one
      interval (as defined by the interval duration above) to include this
      backend endpoint in success rate based outlier detection. If the volume is
      lower than this setting, outlier detection via success rate statistics is
      not performed for that backend endpoint. Defaults to 100. Not supported
      when the backend service uses Serverless NEG.
    type: integer
  successRateStdevFactor:
    description: |-
      This factor is used to determine the ejection threshold for success rate
      outlier ejection. The ejection threshold is the difference between the
      mean success rate, and the product of this factor and the standard
      deviation of the mean success rate: mean - (stdev *
      successRateStdevFactor). This factor is divided by a thousand to get a
      double. That is, if the desired factor is 1.9, the runtime value should be
      1900. Defaults to 1900. Not supported when the backend service uses
      Serverless NEG.
    type: integer
