"""Generated message classes for networkconnectivity version v1.

This API enables connectivity with and between Google Cloud resources.
"""
# NOTE: This file is autogenerated and should not be edited by hand.

from __future__ import absolute_import

from apitools.base.protorpclite import messages as _messages
from apitools.base.py import encoding
from apitools.base.py import extra_types


package = 'networkconnectivity'


class AcceptHubSpokeRequest(_messages.Message):
  r"""The request for HubService.AcceptHubSpoke.

  Fields:
    requestId: Optional. A request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server knows to
      ignore the request if it has already been completed. The server
      guarantees that a request doesn't result in creation of duplicate
      commitments for at least 60 minutes. For example, consider a situation
      where you make an initial request and the request times out. If you make
      the request again with the same request ID, the server can check to see
      whether the original operation was received. If it was, the server
      ignores the second request. This behavior prevents clients from
      mistakenly creating duplicate commitments. The request ID must be a
      valid UUID, with the exception that zero UUID is not supported
      (00000000-0000-0000-0000-000000000000).
    spokeUri: Required. The URI of the spoke to accept into the hub.
  """

  requestId = _messages.StringField(1)
  spokeUri = _messages.StringField(2)


class AcceptHubSpokeResponse(_messages.Message):
  r"""The response for HubService.AcceptHubSpoke.

  Fields:
    spoke: The spoke that was operated on.
  """

  spoke = _messages.MessageField('Spoke', 1)


class ActivateSpokeRequest(_messages.Message):
  r"""The request for HubService.ActivateSpoke.

  Fields:
    requestId: Optional. A request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server knows to
      ignore the request if it has already been completed. The server
      guarantees that a request doesn't result in creation of duplicate
      commitments for at least 60 minutes. For example, consider a situation
      where you make an initial request and the request times out. If you make
      the request again with the same request ID, the server can check to see
      whether the original operation was received. If it was, the server
      ignores the second request. This behavior prevents clients from
      mistakenly creating duplicate commitments. The request ID must be a
      valid UUID, with the exception that zero UUID is not supported
      (00000000-0000-0000-0000-000000000000).
  """

  requestId = _messages.StringField(1)


class AuditConfig(_messages.Message):
  r"""Specifies the audit configuration for a service. The configuration
  determines which permission types are logged, and what identities, if any,
  are exempted from logging. An AuditConfig must have one or more
  AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
  specific service, the union of the two AuditConfigs is used for that
  service: the log_types specified in each AuditConfig are enabled, and the
  exempted_members in each AuditLogConfig are exempted. Example Policy with
  multiple AuditConfigs: { "audit_configs": [ { "service": "allServices",
  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
  "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type":
  "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com",
  "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type":
  "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For
  sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
  logging. It also exempts `jose@example.com` from DATA_READ logging, and
  `aliya@example.com` from DATA_WRITE logging.

  Fields:
    auditLogConfigs: The configuration for logging of each type of permission.
    service: Specifies a service that will be enabled for audit logging. For
      example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
      `allServices` is a special value that covers all services.
  """

  auditLogConfigs = _messages.MessageField('AuditLogConfig', 1, repeated=True)
  service = _messages.StringField(2)


class AuditLogConfig(_messages.Message):
  r"""Provides the configuration for logging a type of permissions. Example: {
  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
  "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
  'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from
  DATA_READ logging.

  Enums:
    LogTypeValueValuesEnum: The log type that this config enables.

  Fields:
    exemptedMembers: Specifies the identities that do not cause logging for
      this type of permission. Follows the same format of Binding.members.
    logType: The log type that this config enables.
  """

  class LogTypeValueValuesEnum(_messages.Enum):
    r"""The log type that this config enables.

    Values:
      LOG_TYPE_UNSPECIFIED: Default case. Should never be this.
      ADMIN_READ: Admin reads. Example: CloudIAM getIamPolicy
      DATA_WRITE: Data writes. Example: CloudSQL Users create
      DATA_READ: Data reads. Example: CloudSQL Users list
    """
    LOG_TYPE_UNSPECIFIED = 0
    ADMIN_READ = 1
    DATA_WRITE = 2
    DATA_READ = 3

  exemptedMembers = _messages.StringField(1, repeated=True)
  logType = _messages.EnumField('LogTypeValueValuesEnum', 2)


class AutoAccept(_messages.Message):
  r"""The auto-accept setting for a group controls whether proposed spokes are
  automatically attached to the hub. If auto-accept is enabled, the spoke
  immediately is attached to the hub and becomes part of the group. In this
  case, the new spoke is in the ACTIVE state. If auto-accept is disabled, the
  spoke goes to the INACTIVE state, and it must be reviewed and accepted by a
  hub administrator.

  Fields:
    autoAcceptProjects: A list of project ids or project numbers for which you
      want to enable auto-accept. The auto-accept setting is applied to spokes
      being created or updated in these projects.
  """

  autoAcceptProjects = _messages.StringField(1, repeated=True)


class Binding(_messages.Message):
  r"""Associates `members`, or principals, with a `role`.

  Fields:
    condition: The condition that is associated with this binding. If the
      condition evaluates to `true`, then this binding applies to the current
      request. If the condition evaluates to `false`, then this binding does
      not apply to the current request. However, a different role binding
      might grant the same role to one or more of the principals in this
      binding. To learn which resources support conditions in their IAM
      policies, see the [IAM
      documentation](https://cloud.google.com/iam/help/conditions/resource-
      policies).
    members: Specifies the principals requesting access for a Google Cloud
      resource. `members` can have the following values: * `allUsers`: A
      special identifier that represents anyone who is on the internet; with
      or without a Google account. * `allAuthenticatedUsers`: A special
      identifier that represents anyone who is authenticated with a Google
      account or a service account. Does not include identities that come from
      external identity providers (IdPs) through identity federation. *
      `user:{emailid}`: An email address that represents a specific Google
      account. For example, `alice@example.com` . *
      `serviceAccount:{emailid}`: An email address that represents a Google
      service account. For example, `my-other-
      app@appspot.gserviceaccount.com`. *
      `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`:
      An identifier for a [Kubernetes service
      account](https://cloud.google.com/kubernetes-engine/docs/how-
      to/kubernetes-service-accounts). For example, `my-
      project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
      `group:{emailid}`: An email address that represents a Google group. For
      example, `admins@example.com`. * `domain:{domain}`: The G Suite domain
      (primary) that represents all the users of that domain. For example,
      `google.com` or `example.com`. * `principal://iam.googleapis.com/locatio
      ns/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A
      single identity in a workforce identity pool. * `principalSet://iam.goog
      leapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
      All workforce identities in a group. * `principalSet://iam.googleapis.co
      m/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{
      attribute_value}`: All workforce identities with a specific attribute
      value. * `principalSet://iam.googleapis.com/locations/global/workforcePo
      ols/{pool_id}/*`: All identities in a workforce identity pool. * `princi
      pal://iam.googleapis.com/projects/{project_number}/locations/global/work
      loadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single
      identity in a workload identity pool. * `principalSet://iam.googleapis.c
      om/projects/{project_number}/locations/global/workloadIdentityPools/{poo
      l_id}/group/{group_id}`: A workload identity pool group. * `principalSet
      ://iam.googleapis.com/projects/{project_number}/locations/global/workloa
      dIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
      All identities in a workload identity pool with a certain attribute. * `
      principalSet://iam.googleapis.com/projects/{project_number}/locations/gl
      obal/workloadIdentityPools/{pool_id}/*`: All identities in a workload
      identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email
      address (plus unique identifier) representing a user that has been
      recently deleted. For example,
      `alice@example.com?uid=123456789012345678901`. If the user is recovered,
      this value reverts to `user:{emailid}` and the recovered user retains
      the role in the binding. *
      `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
      (plus unique identifier) representing a service account that has been
      recently deleted. For example, `my-other-
      app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the
      service account is undeleted, this value reverts to
      `serviceAccount:{emailid}` and the undeleted service account retains the
      role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An
      email address (plus unique identifier) representing a Google group that
      has been recently deleted. For example,
      `admins@example.com?uid=123456789012345678901`. If the group is
      recovered, this value reverts to `group:{emailid}` and the recovered
      group retains the role in the binding. * `deleted:principal://iam.google
      apis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attr
      ibute_value}`: Deleted single identity in a workforce identity pool. For
      example, `deleted:principal://iam.googleapis.com/locations/global/workfo
      rcePools/my-pool-id/subject/my-subject-attribute-value`.
    role: Role that is assigned to the list of `members`, or principals. For
      example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an
      overview of the IAM roles and permissions, see the [IAM
      documentation](https://cloud.google.com/iam/docs/roles-overview). For a
      list of the available pre-defined roles, see
      [here](https://cloud.google.com/iam/docs/understanding-roles).
  """

  condition = _messages.MessageField('Expr', 1)
  members = _messages.StringField(2, repeated=True)
  role = _messages.StringField(3)


class ConsumerPscConfig(_messages.Message):
  r"""Allow the producer to specify which consumers can connect to it.

  Enums:
    StateValueValuesEnum: Output only. Overall state of PSC Connections
      management for this consumer psc config.

  Fields:
    disableGlobalAccess: This is used in PSC consumer ForwardingRule to
      control whether the PSC endpoint can be accessed from another region.
    network: The resource path of the consumer network where PSC connections
      are allowed to be created in. Note, this network does not need be in the
      ConsumerPscConfig.project in the case of SharedVPC. Example:
      projects/{projectNumOrId}/global/networks/{networkId}.
    project: The consumer project where PSC connections are allowed to be
      created in.
    state: Output only. Overall state of PSC Connections management for this
      consumer psc config.
  """

  class StateValueValuesEnum(_messages.Enum):
    r"""Output only. Overall state of PSC Connections management for this
    consumer psc config.

    Values:
      STATE_UNSPECIFIED: Default state, when Connection Map is created
        initially.
      VALID: Set when policy and map configuration is valid, and their
        matching can lead to allowing creation of PSC Connections subject to
        other constraints like connections limit.
      CONNECTION_POLICY_MISSING: No Service Connection Policy found for this
        network and Service Class
      POLICY_LIMIT_REACHED: Service Connection Policy limit reached for this
        network and Service Class
    """
    STATE_UNSPECIFIED = 0
    VALID = 1
    CONNECTION_POLICY_MISSING = 2
    POLICY_LIMIT_REACHED = 3

  disableGlobalAccess = _messages.BooleanField(1)
  network = _messages.StringField(2)
  project = _messages.StringField(3)
  state = _messages.EnumField('StateValueValuesEnum', 4)


class ConsumerPscConnection(_messages.Message):
  r"""PSC connection details on consumer side.

  Enums:
    ErrorTypeValueValuesEnum: The error type indicates whether the error is
      consumer facing, producer facing or system internal.
    StateValueValuesEnum: The state of the PSC connection.

  Fields:
    error: The most recent error during operating this connection.
    errorInfo: Output only. The error info for the latest error during
      operating this connection.
    errorType: The error type indicates whether the error is consumer facing,
      producer facing or system internal.
    forwardingRule: The URI of the consumer forwarding rule created. Example:
      projects/{projectNumOrId}/regions/us-east1/networks/{resourceId}.
    gceOperation: The last Compute Engine operation to setup PSC connection.
    ip: The IP literal allocated on the consumer network for the PSC
      forwarding rule that is created to connect to the producer service
      attachment in this service connection map.
    network: The consumer network whose PSC forwarding rule is connected to
      the service attachments in this service connection map. Note that the
      network could be on a different project (shared VPC).
    project: The consumer project whose PSC forwarding rule is connected to
      the service attachments in this service connection map.
    pscConnectionId: The PSC connection id of the PSC forwarding rule
      connected to the service attachments in this service connection map.
    selectedSubnetwork: Output only. The URI of the selected subnetwork
      selected to allocate IP address for this connection.
    serviceAttachmentUri: The URI of a service attachment which is the target
      of the PSC connection.
    state: The state of the PSC connection.
  """

  class ErrorTypeValueValuesEnum(_messages.Enum):
    r"""The error type indicates whether the error is consumer facing,
    producer facing or system internal.

    Values:
      CONNECTION_ERROR_TYPE_UNSPECIFIED: An invalid error type as the default
        case.
      ERROR_INTERNAL: The error is due to Service Automation system internal.
      ERROR_CONSUMER_SIDE: The error is due to the setup on consumer side.
      ERROR_PRODUCER_SIDE: The error is due to the setup on producer side.
    """
    CONNECTION_ERROR_TYPE_UNSPECIFIED = 0
    ERROR_INTERNAL = 1
    ERROR_CONSUMER_SIDE = 2
    ERROR_PRODUCER_SIDE = 3

  class StateValueValuesEnum(_messages.Enum):
    r"""The state of the PSC connection.

    Values:
      STATE_UNSPECIFIED: An invalid state as the default case.
      ACTIVE: The connection is fully established and ready to use.
      FAILED: The connection is not functional since some resources on the
        connection fail to be created.
      CREATING: The connection is being created.
      DELETING: The connection is being deleted.
    """
    STATE_UNSPECIFIED = 0
    ACTIVE = 1
    FAILED = 2
    CREATING = 3
    DELETING = 4

  error = _messages.MessageField('GoogleRpcStatus', 1)
  errorInfo = _messages.MessageField('GoogleRpcErrorInfo', 2)
  errorType = _messages.EnumField('ErrorTypeValueValuesEnum', 3)
  forwardingRule = _messages.StringField(4)
  gceOperation = _messages.StringField(5)
  ip = _messages.StringField(6)
  network = _messages.StringField(7)
  project = _messages.StringField(8)
  pscConnectionId = _messages.StringField(9)
  selectedSubnetwork = _messages.StringField(10)
  serviceAttachmentUri = _messages.StringField(11)
  state = _messages.EnumField('StateValueValuesEnum', 12)


class DeactivateSpokeRequest(_messages.Message):
  r"""The request for HubService.DeactivateSpoke.

  Fields:
    requestId: Optional. A request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server knows to
      ignore the request if it has already been completed. The server
      guarantees that a request doesn't result in creation of duplicate
      commitments for at least 60 minutes. For example, consider a situation
      where you make an initial request and the request times out. If you make
      the request again with the same request ID, the server can check to see
      whether the original operation was received. If it was, the server
      ignores the second request. This behavior prevents clients from
      mistakenly creating duplicate commitments. The request ID must be a
      valid UUID, with the exception that zero UUID is not supported
      (00000000-0000-0000-0000-000000000000).
  """

  requestId = _messages.StringField(1)


class Empty(_messages.Message):
  r"""A generic empty message that you can re-use to avoid defining duplicated
  empty messages in your APIs. A typical example is to use it as the request
  or the response type of an API method. For instance: service Foo { rpc
  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
  """



class Expr(_messages.Message):
  r"""Represents a textual expression in the Common Expression Language (CEL)
  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
  are documented at https://github.com/google/cel-spec. Example (Comparison):
  title: "Summary size limit" description: "Determines if a summary is less
  than 100 chars" expression: "document.summary.size() < 100" Example
  (Equality): title: "Requestor is owner" description: "Determines if
  requestor is the document owner" expression: "document.owner ==
  request.auth.claims.email" Example (Logic): title: "Public documents"
  description: "Determine whether the document should be publicly visible"
  expression: "document.type != 'private' && document.type != 'internal'"
  Example (Data Manipulation): title: "Notification string" description:
  "Create a notification string with a timestamp." expression: "'New message
  received at ' + string(document.create_time)" The exact variables and
  functions that may be referenced within an expression are determined by the
  service that evaluates it. See the service documentation for additional
  information.

  Fields:
    description: Optional. Description of the expression. This is a longer
      text which describes the expression, e.g. when hovered over it in a UI.
    expression: Textual representation of an expression in Common Expression
      Language syntax.
    location: Optional. String indicating the location of the expression for
      error reporting, e.g. a file name and a position in the file.
    title: Optional. Title for the expression, i.e. a short string describing
      its purpose. This can be used e.g. in UIs which allow to enter the
      expression.
  """

  description = _messages.StringField(1)
  expression = _messages.StringField(2)
  location = _messages.StringField(3)
  title = _messages.StringField(4)


class Filter(_messages.Message):
  r"""Filter matches L4 traffic.

  Enums:
    ProtocolVersionValueValuesEnum: Required. Internet protocol versions this
      policy-based route applies to. For this version, only IPV4 is supported.

  Fields:
    destRange: Optional. The destination IP range of outgoing packets that
      this policy-based route applies to. Default is "0.0.0.0/0" if protocol
      version is IPv4.
    ipProtocol: Optional. The IP protocol that this policy-based route applies
      to. Valid values are 'TCP', 'UDP', and 'ALL'. Default is 'ALL'.
    protocolVersion: Required. Internet protocol versions this policy-based
      route applies to. For this version, only IPV4 is supported.
    srcRange: Optional. The source IP range of outgoing packets that this
      policy-based route applies to. Default is "0.0.0.0/0" if protocol
      version is IPv4.
  """

  class ProtocolVersionValueValuesEnum(_messages.Enum):
    r"""Required. Internet protocol versions this policy-based route applies
    to. For this version, only IPV4 is supported.

    Values:
      PROTOCOL_VERSION_UNSPECIFIED: Default value.
      IPV4: The PBR is for IPv4 internet protocol traffic.
    """
    PROTOCOL_VERSION_UNSPECIFIED = 0
    IPV4 = 1

  destRange = _messages.StringField(1)
  ipProtocol = _messages.StringField(2)
  protocolVersion = _messages.EnumField('ProtocolVersionValueValuesEnum', 3)
  srcRange = _messages.StringField(4)


class GoogleLongrunningCancelOperationRequest(_messages.Message):
  r"""The request message for Operations.CancelOperation."""


class GoogleLongrunningListOperationsResponse(_messages.Message):
  r"""The response message for Operations.ListOperations.

  Fields:
    nextPageToken: The standard List next-page token.
    operations: A list of operations that matches the specified filter in the
      request.
  """

  nextPageToken = _messages.StringField(1)
  operations = _messages.MessageField('GoogleLongrunningOperation', 2, repeated=True)


class GoogleLongrunningOperation(_messages.Message):
  r"""This resource represents a long-running operation that is the result of
  a network API call.

  Messages:
    MetadataValue: Service-specific metadata associated with the operation. It
      typically contains progress information and common metadata such as
      create time. Some services might not provide such metadata. Any method
      that returns a long-running operation should document the metadata type,
      if any.
    ResponseValue: The normal, successful response of the operation. If the
      original method returns no data on success, such as `Delete`, the
      response is `google.protobuf.Empty`. If the original method is standard
      `Get`/`Create`/`Update`, the response should be the resource. For other
      methods, the response should have the type `XxxResponse`, where `Xxx` is
      the original method name. For example, if the original method name is
      `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.

  Fields:
    done: If the value is `false`, it means the operation is still in
      progress. If `true`, the operation is completed, and either `error` or
      `response` is available.
    error: The error result of the operation in case of failure or
      cancellation.
    metadata: Service-specific metadata associated with the operation. It
      typically contains progress information and common metadata such as
      create time. Some services might not provide such metadata. Any method
      that returns a long-running operation should document the metadata type,
      if any.
    name: The server-assigned name, which is only unique within the same
      service that originally returns it. If you use the default HTTP mapping,
      the `name` should be a resource name ending with
      `operations/{unique_id}`.
    response: The normal, successful response of the operation. If the
      original method returns no data on success, such as `Delete`, the
      response is `google.protobuf.Empty`. If the original method is standard
      `Get`/`Create`/`Update`, the response should be the resource. For other
      methods, the response should have the type `XxxResponse`, where `Xxx` is
      the original method name. For example, if the original method name is
      `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class MetadataValue(_messages.Message):
    r"""Service-specific metadata associated with the operation. It typically
    contains progress information and common metadata such as create time.
    Some services might not provide such metadata. Any method that returns a
    long-running operation should document the metadata type, if any.

    Messages:
      AdditionalProperty: An additional property for a MetadataValue object.

    Fields:
      additionalProperties: Properties of the object. Contains field @type
        with type URL.
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a MetadataValue object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  @encoding.MapUnrecognizedFields('additionalProperties')
  class ResponseValue(_messages.Message):
    r"""The normal, successful response of the operation. If the original
    method returns no data on success, such as `Delete`, the response is
    `google.protobuf.Empty`. If the original method is standard
    `Get`/`Create`/`Update`, the response should be the resource. For other
    methods, the response should have the type `XxxResponse`, where `Xxx` is
    the original method name. For example, if the original method name is
    `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.

    Messages:
      AdditionalProperty: An additional property for a ResponseValue object.

    Fields:
      additionalProperties: Properties of the object. Contains field @type
        with type URL.
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a ResponseValue object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  done = _messages.BooleanField(1)
  error = _messages.MessageField('GoogleRpcStatus', 2)
  metadata = _messages.MessageField('MetadataValue', 3)
  name = _messages.StringField(4)
  response = _messages.MessageField('ResponseValue', 5)


class GoogleRpcErrorInfo(_messages.Message):
  r"""Describes the cause of the error with structured details. Example of an
  error when contacting the "pubsub.googleapis.com" API when it is not
  enabled: { "reason": "API_DISABLED" "domain": "googleapis.com" "metadata": {
  "resource": "projects/123", "service": "pubsub.googleapis.com" } } This
  response indicates that the pubsub.googleapis.com API is not enabled.
  Example of an error that is returned when attempting to create a Spanner
  instance in a region that is out of stock: { "reason": "STOCKOUT" "domain":
  "spanner.googleapis.com", "metadata": { "availableRegions": "us-central1,us-
  east2" } }

  Messages:
    MetadataValue: Additional structured details about this error. Keys should
      match /[a-zA-Z0-9-_]/ and be limited to 64 characters in length. When
      identifying the current value of an exceeded limit, the units should be
      contained in the key, not the value. For example, rather than
      {"instanceLimit": "100/request"}, should be returned as,
      {"instanceLimitPerRequest": "100"}, if the client exceeds the number of
      instances that can be created in a single (batch) request.

  Fields:
    domain: The logical grouping to which the "reason" belongs. The error
      domain is typically the registered service name of the tool or product
      that generates the error. Example: "pubsub.googleapis.com". If the error
      is generated by some common infrastructure, the error domain must be a
      globally unique value that identifies the infrastructure. For Google API
      infrastructure, the error domain is "googleapis.com".
    metadata: Additional structured details about this error. Keys should
      match /[a-zA-Z0-9-_]/ and be limited to 64 characters in length. When
      identifying the current value of an exceeded limit, the units should be
      contained in the key, not the value. For example, rather than
      {"instanceLimit": "100/request"}, should be returned as,
      {"instanceLimitPerRequest": "100"}, if the client exceeds the number of
      instances that can be created in a single (batch) request.
    reason: The reason of the error. This is a constant value that identifies
      the proximate cause of the error. Error reasons are unique within a
      particular domain of errors. This should be at most 63 characters and
      match a regular expression of `A-Z+[A-Z0-9]`, which represents
      UPPER_SNAKE_CASE.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class MetadataValue(_messages.Message):
    r"""Additional structured details about this error. Keys should match
    /[a-zA-Z0-9-_]/ and be limited to 64 characters in length. When
    identifying the current value of an exceeded limit, the units should be
    contained in the key, not the value. For example, rather than
    {"instanceLimit": "100/request"}, should be returned as,
    {"instanceLimitPerRequest": "100"}, if the client exceeds the number of
    instances that can be created in a single (batch) request.

    Messages:
      AdditionalProperty: An additional property for a MetadataValue object.

    Fields:
      additionalProperties: Additional properties of type MetadataValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a MetadataValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  domain = _messages.StringField(1)
  metadata = _messages.MessageField('MetadataValue', 2)
  reason = _messages.StringField(3)


class GoogleRpcStatus(_messages.Message):
  r"""The `Status` type defines a logical error model that is suitable for
  different programming environments, including REST APIs and RPC APIs. It is
  used by [gRPC](https://github.com/grpc). Each `Status` message contains
  three pieces of data: error code, error message, and error details. You can
  find out more about this error model and how to work with it in the [API
  Design Guide](https://cloud.google.com/apis/design/errors).

  Messages:
    DetailsValueListEntry: A DetailsValueListEntry object.

  Fields:
    code: The status code, which should be an enum value of google.rpc.Code.
    details: A list of messages that carry the error details. There is a
      common set of message types for APIs to use.
    message: A developer-facing error message, which should be in English. Any
      user-facing error message should be localized and sent in the
      google.rpc.Status.details field, or localized by the client.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class DetailsValueListEntry(_messages.Message):
    r"""A DetailsValueListEntry object.

    Messages:
      AdditionalProperty: An additional property for a DetailsValueListEntry
        object.

    Fields:
      additionalProperties: Properties of the object. Contains field @type
        with type URL.
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a DetailsValueListEntry object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  code = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  details = _messages.MessageField('DetailsValueListEntry', 2, repeated=True)
  message = _messages.StringField(3)


class Group(_messages.Message):
  r"""A group represents a subset of spokes attached to a hub.

  Enums:
    StateValueValuesEnum: Output only. The current lifecycle state of this
      group.

  Messages:
    LabelsValue: Optional. Labels in key-value pair format. For more
      information about labels, see [Requirements for
      labels](https://cloud.google.com/resource-manager/docs/creating-
      managing-labels#requirements).

  Fields:
    autoAccept: Optional. The auto-accept setting for this group.
    createTime: Output only. The time the group was created.
    description: Optional. The description of the group.
    labels: Optional. Labels in key-value pair format. For more information
      about labels, see [Requirements for
      labels](https://cloud.google.com/resource-manager/docs/creating-
      managing-labels#requirements).
    name: Immutable. The name of the group. Group names must be unique. They
      use the following form: `projects/{project_number}/locations/global/hubs
      /{hub}/groups/{group_id}`
    routeTable: Output only. The name of the route table that corresponds to
      this group. They use the following form: `projects/{project_number}/loca
      tions/global/hubs/{hub_id}/routeTables/{route_table_id}`
    state: Output only. The current lifecycle state of this group.
    uid: Output only. The Google-generated UUID for the group. This value is
      unique across all group resources. If a group is deleted and another
      with the same name is created, the new route table is assigned a
      different unique_id.
    updateTime: Output only. The time the group was last updated.
  """

  class StateValueValuesEnum(_messages.Enum):
    r"""Output only. The current lifecycle state of this group.

    Values:
      STATE_UNSPECIFIED: No state information available
      CREATING: The resource's create operation is in progress.
      ACTIVE: The resource is active
      DELETING: The resource's delete operation is in progress.
      ACTIVATING: The resource's activate operation is in progress.
      DEACTIVATING: The resource's deactivate operation is in progress.
      ACCEPTING: The resource's accept operation is in progress.
      REJECTING: The resource's reject operation is in progress.
      UPDATING: The resource's update operation is in progress.
      INACTIVE: The resource is inactive.
      OBSOLETE: The hub associated with this spoke resource has been deleted.
        This state applies to spoke resources only.
    """
    STATE_UNSPECIFIED = 0
    CREATING = 1
    ACTIVE = 2
    DELETING = 3
    ACTIVATING = 4
    DEACTIVATING = 5
    ACCEPTING = 6
    REJECTING = 7
    UPDATING = 8
    INACTIVE = 9
    OBSOLETE = 10

  @encoding.MapUnrecognizedFields('additionalProperties')
  class LabelsValue(_messages.Message):
    r"""Optional. Labels in key-value pair format. For more information about
    labels, see [Requirements for labels](https://cloud.google.com/resource-
    manager/docs/creating-managing-labels#requirements).

    Messages:
      AdditionalProperty: An additional property for a LabelsValue object.

    Fields:
      additionalProperties: Additional properties of type LabelsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a LabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  autoAccept = _messages.MessageField('AutoAccept', 1)
  createTime = _messages.StringField(2)
  description = _messages.StringField(3)
  labels = _messages.MessageField('LabelsValue', 4)
  name = _messages.StringField(5)
  routeTable = _messages.StringField(6)
  state = _messages.EnumField('StateValueValuesEnum', 7)
  uid = _messages.StringField(8)
  updateTime = _messages.StringField(9)


class Hub(_messages.Message):
  r"""A Network Connectivity Center hub is a global management resource to
  which you attach spokes. A single hub can contain spokes from multiple
  regions. However, if any of a hub's spokes use the site-to-site data
  transfer feature, the resources associated with those spokes must all be in
  the same VPC network. Spokes that do not use site-to-site data transfer can
  be associated with any VPC network in your project.

  Enums:
    PolicyModeValueValuesEnum: Optional. The policy mode of this hub. This
      field can be either PRESET or CUSTOM. If unspecified, the policy_mode
      defaults to PRESET.
    PresetTopologyValueValuesEnum: Optional. The topology implemented in this
      hub. Currently, this field is only used when policy_mode = PRESET. The
      available preset topologies are MESH and STAR. If preset_topology is
      unspecified and policy_mode = PRESET, the preset_topology defaults to
      MESH. When policy_mode = CUSTOM, the preset_topology is set to
      PRESET_TOPOLOGY_UNSPECIFIED.
    StateValueValuesEnum: Output only. The current lifecycle state of this
      hub.

  Messages:
    LabelsValue: Optional labels in key-value pair format. For more
      information about labels, see [Requirements for
      labels](https://cloud.google.com/resource-manager/docs/creating-
      managing-labels#requirements).

  Fields:
    createTime: Output only. The time the hub was created.
    description: An optional description of the hub.
    exchangePupi: Optional. Whether Privately Used Public IP (PUPI) exchange
      is enabled for the hub. If true, PUPI exchange will be allowed in VPC
      spokes attached to the hub. The default value is false.
    exportPsc: Optional. Whether Private Service Connect transitivity is
      enabled for the hub. If true, Private Service Connect endpoints in VPC
      spokes attached to the hub are made accessible to other VPC spokes
      attached to the hub. The default value is false.
    labels: Optional labels in key-value pair format. For more information
      about labels, see [Requirements for
      labels](https://cloud.google.com/resource-manager/docs/creating-
      managing-labels#requirements).
    name: Immutable. The name of the hub. Hub names must be unique. They use
      the following form:
      `projects/{project_number}/locations/global/hubs/{hub_id}`
    policyMode: Optional. The policy mode of this hub. This field can be
      either PRESET or CUSTOM. If unspecified, the policy_mode defaults to
      PRESET.
    presetTopology: Optional. The topology implemented in this hub. Currently,
      this field is only used when policy_mode = PRESET. The available preset
      topologies are MESH and STAR. If preset_topology is unspecified and
      policy_mode = PRESET, the preset_topology defaults to MESH. When
      policy_mode = CUSTOM, the preset_topology is set to
      PRESET_TOPOLOGY_UNSPECIFIED.
    routeTables: Output only. The route tables that belong to this hub. They
      use the following form: `projects/{project_number}/locations/global/hubs
      /{hub_id}/routeTables/{route_table_id}` This field is read-only. Network
      Connectivity Center automatically populates it based on the route tables
      nested under the hub.
    routingVpcs: The VPC networks associated with this hub's spokes. This
      field is read-only. Network Connectivity Center automatically populates
      it based on the set of spokes attached to the hub.
    spokeSummary: Output only. A summary of the spokes associated with a hub.
      The summary includes a count of spokes according to type and according
      to state. If any spokes are inactive, the summary also lists the reasons
      they are inactive, including a count for each reason.
    state: Output only. The current lifecycle state of this hub.
    uniqueId: Output only. The Google-generated UUID for the hub. This value
      is unique across all hub resources. If a hub is deleted and another with
      the same name is created, the new hub is assigned a different unique_id.
    updateTime: Output only. The time the hub was last updated.
  """

  class PolicyModeValueValuesEnum(_messages.Enum):
    r"""Optional. The policy mode of this hub. This field can be either PRESET
    or CUSTOM. If unspecified, the policy_mode defaults to PRESET.

    Values:
      POLICY_MODE_UNSPECIFIED: Policy mode is unspecified. It defaults to
        PRESET with preset_topology = MESH.
      PRESET: Hub uses one of the preset topologies.
      CUSTOM: Hub can freely specify the topology using groups and policy.
    """
    POLICY_MODE_UNSPECIFIED = 0
    PRESET = 1
    CUSTOM = 2

  class PresetTopologyValueValuesEnum(_messages.Enum):
    r"""Optional. The topology implemented in this hub. Currently, this field
    is only used when policy_mode = PRESET. The available preset topologies
    are MESH and STAR. If preset_topology is unspecified and policy_mode =
    PRESET, the preset_topology defaults to MESH. When policy_mode = CUSTOM,
    the preset_topology is set to PRESET_TOPOLOGY_UNSPECIFIED.

    Values:
      PRESET_TOPOLOGY_UNSPECIFIED: Preset topology is unspecified. When
        policy_mode = PRESET, it defaults to MESH.
      PRESET_TOPOLOGY_DISALLOWED: No preset topology is allowed. It is used
        when policy_mode is `custom`.
      MESH: Mesh topology is implemented. Group `default` is automatically
        created. All spokes in the hub are added to group `default`.
      STAR: Star topology is implemented. Two groups, `center` and `edge`, are
        automatically created along with hub creation. Spokes have to join one
        of the groups during creation.
    """
    PRESET_TOPOLOGY_UNSPECIFIED = 0
    PRESET_TOPOLOGY_DISALLOWED = 1
    MESH = 2
    STAR = 3

  class StateValueValuesEnum(_messages.Enum):
    r"""Output only. The current lifecycle state of this hub.

    Values:
      STATE_UNSPECIFIED: No state information available
      CREATING: The resource's create operation is in progress.
      ACTIVE: The resource is active
      DELETING: The resource's delete operation is in progress.
      ACTIVATING: The resource's activate operation is in progress.
      DEACTIVATING: The resource's deactivate operation is in progress.
      ACCEPTING: The resource's accept operation is in progress.
      REJECTING: The resource's reject operation is in progress.
      UPDATING: The resource's update operation is in progress.
      INACTIVE: The resource is inactive.
      OBSOLETE: The hub associated with this spoke resource has been deleted.
        This state applies to spoke resources only.
    """
    STATE_UNSPECIFIED = 0
    CREATING = 1
    ACTIVE = 2
    DELETING = 3
    ACTIVATING = 4
    DEACTIVATING = 5
    ACCEPTING = 6
    REJECTING = 7
    UPDATING = 8
    INACTIVE = 9
    OBSOLETE = 10

  @encoding.MapUnrecognizedFields('additionalProperties')
  class LabelsValue(_messages.Message):
    r"""Optional labels in key-value pair format. For more information about
    labels, see [Requirements for labels](https://cloud.google.com/resource-
    manager/docs/creating-managing-labels#requirements).

    Messages:
      AdditionalProperty: An additional property for a LabelsValue object.

    Fields:
      additionalProperties: Additional properties of type LabelsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a LabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  createTime = _messages.StringField(1)
  description = _messages.StringField(2)
  exchangePupi = _messages.BooleanField(3)
  exportPsc = _messages.BooleanField(4)
  labels = _messages.MessageField('LabelsValue', 5)
  name = _messages.StringField(6)
  policyMode = _messages.EnumField('PolicyModeValueValuesEnum', 7)
  presetTopology = _messages.EnumField('PresetTopologyValueValuesEnum', 8)
  routeTables = _messages.StringField(9, repeated=True)
  routingVpcs = _messages.MessageField('RoutingVPC', 10, repeated=True)
  spokeSummary = _messages.MessageField('SpokeSummary', 11)
  state = _messages.EnumField('StateValueValuesEnum', 12)
  uniqueId = _messages.StringField(13)
  updateTime = _messages.StringField(14)


class InterconnectAttachment(_messages.Message):
  r"""InterconnectAttachment that this route applies to.

  Fields:
    region: Optional. Cloud region to install this policy-based route on
      interconnect attachment. Use `all` to install it on all interconnect
      attachments.
  """

  region = _messages.StringField(1)


class InternalRange(_messages.Message):
  r"""The internal range resource for IPAM operations within a VPC network.
  Used to represent a private address range along with behavioral
  characterstics of that range (its usage and peering behavior). Networking
  resources can link to this range if they are created as belonging to it.

  Enums:
    OverlapsValueListEntryValuesEnum:
    PeeringValueValuesEnum: The type of peering set for this internal range.
    UsageValueValuesEnum: The type of usage set for this InternalRange.

  Messages:
    LabelsValue: User-defined labels.

  Fields:
    createTime: Time when the internal range was created.
    description: A description of this resource.
    ipCidrRange: The IP range that this internal range defines.
    labels: User-defined labels.
    name: Immutable. The name of an internal range. Format:
      projects/{project}/locations/{location}/internalRanges/{internal_range}
      See: https://google.aip.dev/122#fields-representing-resource-names
    network: The URL or resource ID of the network in which to reserve the
      internal range. The network cannot be deleted if there are any reserved
      internal ranges referring to it. Legacy networks are not supported. This
      can only be specified for a global internal address. Example: - URL:
      /compute/v1/projects/{project}/global/networks/{resourceId} - ID:
      network123
    overlaps: Optional. Types of resources that are allowed to overlap with
      the current internal range.
    peering: The type of peering set for this internal range.
    prefixLength: An alternate to ip_cidr_range. Can be set when trying to
      create a reservation that automatically finds a free range of the given
      size. If both ip_cidr_range and prefix_length are set, there is an error
      if the range sizes do not match. Can also be used during updates to
      change the range size.
    targetCidrRange: Optional. Can be set to narrow down or pick a different
      address space while searching for a free range. If not set, defaults to
      the "10.0.0.0/8" address space. This can be used to search in other
      rfc-1918 address spaces like "172.16.0.0/12" and "192.168.0.0/16" or
      non-rfc-1918 address spaces used in the VPC.
    updateTime: Time when the internal range was updated.
    usage: The type of usage set for this InternalRange.
    users: Output only. The list of resources that refer to this internal
      range. Resources that use the internal range for their range allocation
      are referred to as users of the range. Other resources mark themselves
      as users while doing so by creating a reference to this internal range.
      Having a user, based on this reference, prevents deletion of the
      internal range referred to. Can be empty.
  """

  class OverlapsValueListEntryValuesEnum(_messages.Enum):
    r"""OverlapsValueListEntryValuesEnum enum type.

    Values:
      OVERLAP_UNSPECIFIED: No overlap overrides.
      OVERLAP_ROUTE_RANGE: Allow creation of static routes more specific that
        the current internal range.
      OVERLAP_EXISTING_SUBNET_RANGE: Allow creation of internal ranges that
        overlap with existing subnets.
    """
    OVERLAP_UNSPECIFIED = 0
    OVERLAP_ROUTE_RANGE = 1
    OVERLAP_EXISTING_SUBNET_RANGE = 2

  class PeeringValueValuesEnum(_messages.Enum):
    r"""The type of peering set for this internal range.

    Values:
      PEERING_UNSPECIFIED: If Peering is left unspecified in
        CreateInternalRange or UpdateInternalRange, it will be defaulted to
        FOR_SELF.
      FOR_SELF: This is the default behavior and represents the case that this
        internal range is intended to be used in the VPC in which it is
        created and is accessible from its peers. This implies that peers or
        peers-of-peers cannot use this range.
      FOR_PEER: This behavior can be set when the internal range is being
        reserved for usage by peers. This means that no resource within the
        VPC in which it is being created can use this to associate with a VPC
        resource, but one of the peers can. This represents donating a range
        for peers to use.
      NOT_SHARED: This behavior can be set when the internal range is being
        reserved for usage by the VPC in which it is created, but not shared
        with peers. In a sense, it is local to the VPC. This can be used to
        create internal ranges for various purposes like
        HTTP_INTERNAL_LOAD_BALANCER or for Interconnect routes that are not
        shared with peers. This also implies that peers cannot use this range
        in a way that is visible to this VPC, but can re-use this range as
        long as it is NOT_SHARED from the peer VPC, too.
    """
    PEERING_UNSPECIFIED = 0
    FOR_SELF = 1
    FOR_PEER = 2
    NOT_SHARED = 3

  class UsageValueValuesEnum(_messages.Enum):
    r"""The type of usage set for this InternalRange.

    Values:
      USAGE_UNSPECIFIED: Unspecified usage is allowed in calls which identify
        the resource by other fields and do not need Usage set to complete.
        These are, i.e.: GetInternalRange and DeleteInternalRange. Usage needs
        to be specified explicitly in CreateInternalRange or
        UpdateInternalRange calls.
      FOR_VPC: A VPC resource can use the reserved CIDR block by associating
        it with the internal range resource if usage is set to FOR_VPC.
      EXTERNAL_TO_VPC: Ranges created with EXTERNAL_TO_VPC cannot be
        associated with VPC resources and are meant to block out address
        ranges for various use cases, like for example, usage on-prem, with
        dynamic route announcements via interconnect.
    """
    USAGE_UNSPECIFIED = 0
    FOR_VPC = 1
    EXTERNAL_TO_VPC = 2

  @encoding.MapUnrecognizedFields('additionalProperties')
  class LabelsValue(_messages.Message):
    r"""User-defined labels.

    Messages:
      AdditionalProperty: An additional property for a LabelsValue object.

    Fields:
      additionalProperties: Additional properties of type LabelsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a LabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  createTime = _messages.StringField(1)
  description = _messages.StringField(2)
  ipCidrRange = _messages.StringField(3)
  labels = _messages.MessageField('LabelsValue', 4)
  name = _messages.StringField(5)
  network = _messages.StringField(6)
  overlaps = _messages.EnumField('OverlapsValueListEntryValuesEnum', 7, repeated=True)
  peering = _messages.EnumField('PeeringValueValuesEnum', 8)
  prefixLength = _messages.IntegerField(9, variant=_messages.Variant.INT32)
  targetCidrRange = _messages.StringField(10, repeated=True)
  updateTime = _messages.StringField(11)
  usage = _messages.EnumField('UsageValueValuesEnum', 12)
  users = _messages.StringField(13, repeated=True)


class LinkedInterconnectAttachments(_messages.Message):
  r"""A collection of VLAN attachment resources. These resources should be
  redundant attachments that all advertise the same prefixes to Google Cloud.
  Alternatively, in active/passive configurations, all attachments should be
  capable of advertising the same prefixes.

  Fields:
    siteToSiteDataTransfer: A value that controls whether site-to-site data
      transfer is enabled for these resources. Data transfer is available only
      in [supported locations](https://cloud.google.com/network-
      connectivity/docs/network-connectivity-center/concepts/locations).
    uris: The URIs of linked interconnect attachment resources
    vpcNetwork: Output only. The VPC network where these VLAN attachments are
      located.
  """

  siteToSiteDataTransfer = _messages.BooleanField(1)
  uris = _messages.StringField(2, repeated=True)
  vpcNetwork = _messages.StringField(3)


class LinkedRouterApplianceInstances(_messages.Message):
  r"""A collection of router appliance instances. If you configure multiple
  router appliance instances to receive data from the same set of sites
  outside of Google Cloud, we recommend that you associate those instances
  with the same spoke.

  Fields:
    instances: The list of router appliance instances.
    siteToSiteDataTransfer: A value that controls whether site-to-site data
      transfer is enabled for these resources. Data transfer is available only
      in [supported locations](https://cloud.google.com/network-
      connectivity/docs/network-connectivity-center/concepts/locations).
    vpcNetwork: Output only. The VPC network where these router appliance
      instances are located.
  """

  instances = _messages.MessageField('RouterApplianceInstance', 1, repeated=True)
  siteToSiteDataTransfer = _messages.BooleanField(2)
  vpcNetwork = _messages.StringField(3)


class LinkedVpcNetwork(_messages.Message):
  r"""An existing VPC network.

  Fields:
    excludeExportRanges: Optional. IP ranges encompassing the subnets to be
      excluded from peering.
    includeExportRanges: Optional. IP ranges allowed to be included from
      peering.
    uri: Required. The URI of the VPC network resource.
  """

  excludeExportRanges = _messages.StringField(1, repeated=True)
  includeExportRanges = _messages.StringField(2, repeated=True)
  uri = _messages.StringField(3)


class LinkedVpnTunnels(_messages.Message):
  r"""A collection of Cloud VPN tunnel resources. These resources should be
  redundant HA VPN tunnels that all advertise the same prefixes to Google
  Cloud. Alternatively, in a passive/active configuration, all tunnels should
  be capable of advertising the same prefixes.

  Fields:
    siteToSiteDataTransfer: A value that controls whether site-to-site data
      transfer is enabled for these resources. Data transfer is available only
      in [supported locations](https://cloud.google.com/network-
      connectivity/docs/network-connectivity-center/concepts/locations).
    uris: The URIs of linked VPN tunnel resources.
    vpcNetwork: Output only. The VPC network where these VPN tunnels are
      located.
  """

  siteToSiteDataTransfer = _messages.BooleanField(1)
  uris = _messages.StringField(2, repeated=True)
  vpcNetwork = _messages.StringField(3)


class ListGroupsResponse(_messages.Message):
  r"""Response for HubService.ListGroups method.

  Fields:
    groups: The requested groups.
    nextPageToken: The token for the next page of the response. To see more
      results, use this value as the page_token for your next request. If this
      value is empty, there are no more results.
    unreachable: Hubs that could not be reached.
  """

  groups = _messages.MessageField('Group', 1, repeated=True)
  nextPageToken = _messages.StringField(2)
  unreachable = _messages.StringField(3, repeated=True)


class ListHubSpokesResponse(_messages.Message):
  r"""The response for HubService.ListHubSpokes.

  Fields:
    nextPageToken: The token for the next page of the response. To see more
      results, use this value as the page_token for your next request. If this
      value is empty, there are no more results.
    spokes: The requested spokes. The spoke fields can be partially populated
      based on the `view` field in the request message.
    unreachable: Locations that could not be reached.
  """

  nextPageToken = _messages.StringField(1)
  spokes = _messages.MessageField('Spoke', 2, repeated=True)
  unreachable = _messages.StringField(3, repeated=True)


class ListHubsResponse(_messages.Message):
  r"""Response for HubService.ListHubs method.

  Fields:
    hubs: The requested hubs.
    nextPageToken: The token for the next page of the response. To see more
      results, use this value as the page_token for your next request. If this
      value is empty, there are no more results.
    unreachable: Locations that could not be reached.
  """

  hubs = _messages.MessageField('Hub', 1, repeated=True)
  nextPageToken = _messages.StringField(2)
  unreachable = _messages.StringField(3, repeated=True)


class ListInternalRangesResponse(_messages.Message):
  r"""Response for InternalRange.ListInternalRanges

  Fields:
    internalRanges: Internal ranges to be returned.
    nextPageToken: The next pagination token in the List response. It should
      be used as page_token for the following request. An empty value means no
      more result.
    unreachable: Locations that could not be reached.
  """

  internalRanges = _messages.MessageField('InternalRange', 1, repeated=True)
  nextPageToken = _messages.StringField(2)
  unreachable = _messages.StringField(3, repeated=True)


class ListLocationsResponse(_messages.Message):
  r"""The response message for Locations.ListLocations.

  Fields:
    locations: A list of locations that matches the specified filter in the
      request.
    nextPageToken: The standard List next-page token.
  """

  locations = _messages.MessageField('Location', 1, repeated=True)
  nextPageToken = _messages.StringField(2)


class ListPolicyBasedRoutesResponse(_messages.Message):
  r"""Response for PolicyBasedRouting.ListPolicyBasedRoutes method.

  Fields:
    nextPageToken: The next pagination token in the List response. It should
      be used as page_token for the following request. An empty value means no
      more result.
    policyBasedRoutes: Policy-based routes to be returned.
    unreachable: Locations that could not be reached.
  """

  nextPageToken = _messages.StringField(1)
  policyBasedRoutes = _messages.MessageField('PolicyBasedRoute', 2, repeated=True)
  unreachable = _messages.StringField(3, repeated=True)


class ListRouteTablesResponse(_messages.Message):
  r"""Response for HubService.ListRouteTables method.

  Fields:
    nextPageToken: The token for the next page of the response. To see more
      results, use this value as the page_token for your next request. If this
      value is empty, there are no more results.
    routeTables: The requested route tables.
    unreachable: Hubs that could not be reached.
  """

  nextPageToken = _messages.StringField(1)
  routeTables = _messages.MessageField('RouteTable', 2, repeated=True)
  unreachable = _messages.StringField(3, repeated=True)


class ListRoutesResponse(_messages.Message):
  r"""Response for HubService.ListRoutes method.

  Fields:
    nextPageToken: The token for the next page of the response. To see more
      results, use this value as the page_token for your next request. If this
      value is empty, there are no more results.
    routes: The requested routes.
    unreachable: RouteTables that could not be reached.
  """

  nextPageToken = _messages.StringField(1)
  routes = _messages.MessageField('Route', 2, repeated=True)
  unreachable = _messages.StringField(3, repeated=True)


class ListServiceClassesResponse(_messages.Message):
  r"""Response for ListServiceClasses.

  Fields:
    nextPageToken: The next pagination token in the List response. It should
      be used as page_token for the following request. An empty value means no
      more result.
    serviceClasses: ServiceClasses to be returned.
    unreachable: Locations that could not be reached.
  """

  nextPageToken = _messages.StringField(1)
  serviceClasses = _messages.MessageField('ServiceClass', 2, repeated=True)
  unreachable = _messages.StringField(3, repeated=True)


class ListServiceConnectionMapsResponse(_messages.Message):
  r"""Response for ListServiceConnectionMaps.

  Fields:
    nextPageToken: The next pagination token in the List response. It should
      be used as page_token for the following request. An empty value means no
      more result.
    serviceConnectionMaps: ServiceConnectionMaps to be returned.
    unreachable: Locations that could not be reached.
  """

  nextPageToken = _messages.StringField(1)
  serviceConnectionMaps = _messages.MessageField('ServiceConnectionMap', 2, repeated=True)
  unreachable = _messages.StringField(3, repeated=True)


class ListServiceConnectionPoliciesResponse(_messages.Message):
  r"""Response for ListServiceConnectionPolicies.

  Fields:
    nextPageToken: The next pagination token in the List response. It should
      be used as page_token for the following request. An empty value means no
      more result.
    serviceConnectionPolicies: ServiceConnectionPolicies to be returned.
    unreachable: Locations that could not be reached.
  """

  nextPageToken = _messages.StringField(1)
  serviceConnectionPolicies = _messages.MessageField('ServiceConnectionPolicy', 2, repeated=True)
  unreachable = _messages.StringField(3, repeated=True)


class ListServiceConnectionTokensResponse(_messages.Message):
  r"""Response for ListServiceConnectionTokens.

  Fields:
    nextPageToken: The next pagination token in the List response. It should
      be used as page_token for the following request. An empty value means no
      more result.
    serviceConnectionTokens: ServiceConnectionTokens to be returned.
    unreachable: Locations that could not be reached.
  """

  nextPageToken = _messages.StringField(1)
  serviceConnectionTokens = _messages.MessageField('ServiceConnectionToken', 2, repeated=True)
  unreachable = _messages.StringField(3, repeated=True)


class ListSpokesResponse(_messages.Message):
  r"""The response for HubService.ListSpokes.

  Fields:
    nextPageToken: The token for the next page of the response. To see more
      results, use this value as the page_token for your next request. If this
      value is empty, there are no more results.
    spokes: The requested spokes.
    unreachable: Locations that could not be reached.
  """

  nextPageToken = _messages.StringField(1)
  spokes = _messages.MessageField('Spoke', 2, repeated=True)
  unreachable = _messages.StringField(3, repeated=True)


class Location(_messages.Message):
  r"""A resource that represents a Google Cloud location.

  Messages:
    LabelsValue: Cross-service attributes for the location. For example
      {"cloud.googleapis.com/region": "us-east1"}
    MetadataValue: Service-specific metadata. For example the available
      capacity at the given location.

  Fields:
    displayName: The friendly name for this location, typically a nearby city
      name. For example, "Tokyo".
    labels: Cross-service attributes for the location. For example
      {"cloud.googleapis.com/region": "us-east1"}
    locationId: The canonical id for this location. For example: `"us-east1"`.
    metadata: Service-specific metadata. For example the available capacity at
      the given location.
    name: Resource name for the location, which may vary between
      implementations. For example: `"projects/example-project/locations/us-
      east1"`
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class LabelsValue(_messages.Message):
    r"""Cross-service attributes for the location. For example
    {"cloud.googleapis.com/region": "us-east1"}

    Messages:
      AdditionalProperty: An additional property for a LabelsValue object.

    Fields:
      additionalProperties: Additional properties of type LabelsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a LabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  @encoding.MapUnrecognizedFields('additionalProperties')
  class MetadataValue(_messages.Message):
    r"""Service-specific metadata. For example the available capacity at the
    given location.

    Messages:
      AdditionalProperty: An additional property for a MetadataValue object.

    Fields:
      additionalProperties: Properties of the object. Contains field @type
        with type URL.
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a MetadataValue object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  displayName = _messages.StringField(1)
  labels = _messages.MessageField('LabelsValue', 2)
  locationId = _messages.StringField(3)
  metadata = _messages.MessageField('MetadataValue', 4)
  name = _messages.StringField(5)


class LocationMetadata(_messages.Message):
  r"""Metadata about locations

  Enums:
    LocationFeaturesValueListEntryValuesEnum:

  Fields:
    locationFeatures: List of supported features
  """

  class LocationFeaturesValueListEntryValuesEnum(_messages.Enum):
    r"""LocationFeaturesValueListEntryValuesEnum enum type.

    Values:
      LOCATION_FEATURE_UNSPECIFIED: No publicly supported feature in this
        location
      SITE_TO_CLOUD_SPOKES: Site-to-cloud spokes are supported in this
        location
      SITE_TO_SITE_SPOKES: Site-to-site spokes are supported in this location
    """
    LOCATION_FEATURE_UNSPECIFIED = 0
    SITE_TO_CLOUD_SPOKES = 1
    SITE_TO_SITE_SPOKES = 2

  locationFeatures = _messages.EnumField('LocationFeaturesValueListEntryValuesEnum', 1, repeated=True)


class NetworkconnectivityProjectsLocationsGetRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGetRequest object.

  Fields:
    name: Resource name for the location.
  """

  name = _messages.StringField(1, required=True)


class NetworkconnectivityProjectsLocationsGlobalHubsAcceptSpokeRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalHubsAcceptSpokeRequest
  object.

  Fields:
    acceptHubSpokeRequest: A AcceptHubSpokeRequest resource to be passed as
      the request body.
    name: Required. The name of the hub into which to accept the spoke.
  """

  acceptHubSpokeRequest = _messages.MessageField('AcceptHubSpokeRequest', 1)
  name = _messages.StringField(2, required=True)


class NetworkconnectivityProjectsLocationsGlobalHubsCreateRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalHubsCreateRequest object.

  Fields:
    hub: A Hub resource to be passed as the request body.
    hubId: Required. A unique identifier for the hub.
    parent: Required. The parent resource.
    requestId: Optional. A request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server knows to
      ignore the request if it has already been completed. The server
      guarantees that a request doesn't result in creation of duplicate
      commitments for at least 60 minutes. For example, consider a situation
      where you make an initial request and the request times out. If you make
      the request again with the same request ID, the server can check to see
      whether the original operation was received. If it was, the server
      ignores the second request. This behavior prevents clients from
      mistakenly creating duplicate commitments. The request ID must be a
      valid UUID, with the exception that zero UUID is not supported
      (00000000-0000-0000-0000-000000000000).
  """

  hub = _messages.MessageField('Hub', 1)
  hubId = _messages.StringField(2)
  parent = _messages.StringField(3, required=True)
  requestId = _messages.StringField(4)


class NetworkconnectivityProjectsLocationsGlobalHubsDeleteRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalHubsDeleteRequest object.

  Fields:
    name: Required. The name of the hub to delete.
    requestId: Optional. A request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server knows to
      ignore the request if it has already been completed. The server
      guarantees that a request doesn't result in creation of duplicate
      commitments for at least 60 minutes. For example, consider a situation
      where you make an initial request and the request times out. If you make
      the request again with the same request ID, the server can check to see
      whether the original operation was received. If it was, the server
      ignores the second request. This behavior prevents clients from
      mistakenly creating duplicate commitments. The request ID must be a
      valid UUID, with the exception that zero UUID is not supported
      (00000000-0000-0000-0000-000000000000).
  """

  name = _messages.StringField(1, required=True)
  requestId = _messages.StringField(2)


class NetworkconnectivityProjectsLocationsGlobalHubsGetIamPolicyRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalHubsGetIamPolicyRequest
  object.

  Fields:
    options_requestedPolicyVersion: Optional. The maximum policy version that
      will be used to format the policy. Valid values are 0, 1, and 3.
      Requests specifying an invalid value will be rejected. Requests for
      policies with any conditional role bindings must specify version 3.
      Policies with no conditional role bindings may specify any valid value
      or leave the field unset. The policy in the response might use the
      policy version that you specified, or it might use a lower policy
      version. For example, if you specify version 3, but the policy has no
      conditional role bindings, the response uses version 1. To learn which
      resources support conditions in their IAM policies, see the [IAM
      documentation](https://cloud.google.com/iam/help/conditions/resource-
      policies).
    resource: REQUIRED: The resource for which the policy is being requested.
      See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
  """

  options_requestedPolicyVersion = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  resource = _messages.StringField(2, required=True)


class NetworkconnectivityProjectsLocationsGlobalHubsGetRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalHubsGetRequest object.

  Fields:
    name: Required. The name of the hub resource to get.
  """

  name = _messages.StringField(1, required=True)


class NetworkconnectivityProjectsLocationsGlobalHubsGroupsCreateRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalHubsGroupsCreateRequest
  object.

  Fields:
    group: A Group resource to be passed as the request body.
    groupId: Required. A unique identifier for the group
    parent: Required. The parent resource.
    requestId: Optional. A request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server knows to
      ignore the request if it has already been completed. The server
      guarantees that a request doesn't result in creation of duplicate
      commitments for at least 60 minutes. For example, consider a situation
      where you make an initial request and the request times out. If you make
      the request again with the same request ID, the server can check to see
      whether the original operation was received. If it was, the server
      ignores the second request. This behavior prevents clients from
      mistakenly creating duplicate commitments. The request ID must be a
      valid UUID, with the exception that zero UUID is not supported
      (00000000-0000-0000-0000-000000000000).
  """

  group = _messages.MessageField('Group', 1)
  groupId = _messages.StringField(2)
  parent = _messages.StringField(3, required=True)
  requestId = _messages.StringField(4)


class NetworkconnectivityProjectsLocationsGlobalHubsGroupsDeleteRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalHubsGroupsDeleteRequest
  object.

  Fields:
    name: Required. The name of the group to delete.
    requestId: Optional. A request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server knows to
      ignore the request if it has already been completed. The server
      guarantees that a request doesn't result in creation of duplicate
      commitments for at least 60 minutes. For example, consider a situation
      where you make an initial request and the request times out. If you make
      the request again with the same request ID, the server can check to see
      whether the original operation was received. If it was, the server
      ignores the second request. This behavior prevents clients from
      mistakenly creating duplicate commitments. The request ID must be a
      valid UUID, with the exception that zero UUID is not supported
      (00000000-0000-0000-0000-000000000000).
  """

  name = _messages.StringField(1, required=True)
  requestId = _messages.StringField(2)


class NetworkconnectivityProjectsLocationsGlobalHubsGroupsGetIamPolicyRequest(_messages.Message):
  r"""A
  NetworkconnectivityProjectsLocationsGlobalHubsGroupsGetIamPolicyRequest
  object.

  Fields:
    options_requestedPolicyVersion: Optional. The maximum policy version that
      will be used to format the policy. Valid values are 0, 1, and 3.
      Requests specifying an invalid value will be rejected. Requests for
      policies with any conditional role bindings must specify version 3.
      Policies with no conditional role bindings may specify any valid value
      or leave the field unset. The policy in the response might use the
      policy version that you specified, or it might use a lower policy
      version. For example, if you specify version 3, but the policy has no
      conditional role bindings, the response uses version 1. To learn which
      resources support conditions in their IAM policies, see the [IAM
      documentation](https://cloud.google.com/iam/help/conditions/resource-
      policies).
    resource: REQUIRED: The resource for which the policy is being requested.
      See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
  """

  options_requestedPolicyVersion = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  resource = _messages.StringField(2, required=True)


class NetworkconnectivityProjectsLocationsGlobalHubsGroupsGetRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalHubsGroupsGetRequest object.

  Fields:
    name: Required. The name of the route table resource.
  """

  name = _messages.StringField(1, required=True)


class NetworkconnectivityProjectsLocationsGlobalHubsGroupsListRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalHubsGroupsListRequest
  object.

  Fields:
    filter: An expression that filters the list of results.
    orderBy: Sort the results by a certain order.
    pageSize: The maximum number of results to return per page.
    pageToken: The page token.
    parent: Required. The parent resource's name.
  """

  filter = _messages.StringField(1)
  orderBy = _messages.StringField(2)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)
  parent = _messages.StringField(5, required=True)


class NetworkconnectivityProjectsLocationsGlobalHubsGroupsPatchRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalHubsGroupsPatchRequest
  object.

  Fields:
    group: A Group resource to be passed as the request body.
    name: Immutable. The name of the group. Group names must be unique. They
      use the following form: `projects/{project_number}/locations/global/hubs
      /{hub}/groups/{group_id}`
    requestId: Optional. A request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server knows to
      ignore the request if it has already been completed. The server
      guarantees that a request doesn't result in creation of duplicate
      commitments for at least 60 minutes. For example, consider a situation
      where you make an initial request and the request times out. If you make
      the request again with the same request ID, the server can check to see
      whether the original operation was received. If it was, the server
      ignores the second request. This behavior prevents clients from
      mistakenly creating duplicate commitments. The request ID must be a
      valid UUID, with the exception that zero UUID is not supported
      (00000000-0000-0000-0000-000000000000).
    updateMask: Optional. In the case of an update to an existing group, field
      mask is used to specify the fields to be overwritten. The fields
      specified in the update_mask are relative to the resource, not the full
      request. A field is overwritten if it is in the mask. If the user does
      not provide a mask, then all fields are overwritten.
  """

  group = _messages.MessageField('Group', 1)
  name = _messages.StringField(2, required=True)
  requestId = _messages.StringField(3)
  updateMask = _messages.StringField(4)


class NetworkconnectivityProjectsLocationsGlobalHubsGroupsSetIamPolicyRequest(_messages.Message):
  r"""A
  NetworkconnectivityProjectsLocationsGlobalHubsGroupsSetIamPolicyRequest
  object.

  Fields:
    resource: REQUIRED: The resource for which the policy is being specified.
      See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
    setIamPolicyRequest: A SetIamPolicyRequest resource to be passed as the
      request body.
  """

  resource = _messages.StringField(1, required=True)
  setIamPolicyRequest = _messages.MessageField('SetIamPolicyRequest', 2)


class NetworkconnectivityProjectsLocationsGlobalHubsGroupsTestIamPermissionsRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalHubsGroupsTestIamPermissions
  Request object.

  Fields:
    resource: REQUIRED: The resource for which the policy detail is being
      requested. See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
    testIamPermissionsRequest: A TestIamPermissionsRequest resource to be
      passed as the request body.
  """

  resource = _messages.StringField(1, required=True)
  testIamPermissionsRequest = _messages.MessageField('TestIamPermissionsRequest', 2)


class NetworkconnectivityProjectsLocationsGlobalHubsListRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalHubsListRequest object.

  Fields:
    filter: An expression that filters the list of results.
    orderBy: Sort the results by a certain order.
    pageSize: The maximum number of results per page to return.
    pageToken: The page token.
    parent: Required. The parent resource's name.
  """

  filter = _messages.StringField(1)
  orderBy = _messages.StringField(2)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)
  parent = _messages.StringField(5, required=True)


class NetworkconnectivityProjectsLocationsGlobalHubsListSpokesRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalHubsListSpokesRequest
  object.

  Enums:
    ViewValueValuesEnum: The view of the spoke to return. The view that you
      use determines which spoke fields are included in the response.

  Fields:
    filter: An expression that filters the list of results.
    name: Required. The name of the hub.
    orderBy: Sort the results by name or create_time.
    pageSize: The maximum number of results to return per page.
    pageToken: The page token.
    spokeLocations: A list of locations. Specify one of the following:
      `[global]`, a single region (for example, `[us-central1]`), or a
      combination of values (for example, `[global, us-central1, us-west1]`).
      If the spoke_locations field is populated, the list of results includes
      only spokes in the specified location. If the spoke_locations field is
      not populated, the list of results includes spokes in all locations.
    view: The view of the spoke to return. The view that you use determines
      which spoke fields are included in the response.
  """

  class ViewValueValuesEnum(_messages.Enum):
    r"""The view of the spoke to return. The view that you use determines
    which spoke fields are included in the response.

    Values:
      SPOKE_VIEW_UNSPECIFIED: The spoke view is unspecified. When the spoke
        view is unspecified, the API returns the same fields as the `BASIC`
        view.
      BASIC: Includes `name`, `create_time`, `hub`, `unique_id`, `state`,
        `reasons`, and `spoke_type`. This is the default value.
      DETAILED: Includes all spoke fields except `labels`. You can use the
        `DETAILED` view only when you set the `spoke_locations` field to
        `[global]`.
    """
    SPOKE_VIEW_UNSPECIFIED = 0
    BASIC = 1
    DETAILED = 2

  filter = _messages.StringField(1)
  name = _messages.StringField(2, required=True)
  orderBy = _messages.StringField(3)
  pageSize = _messages.IntegerField(4, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(5)
  spokeLocations = _messages.StringField(6, repeated=True)
  view = _messages.EnumField('ViewValueValuesEnum', 7)


class NetworkconnectivityProjectsLocationsGlobalHubsPatchRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalHubsPatchRequest object.

  Fields:
    hub: A Hub resource to be passed as the request body.
    name: Immutable. The name of the hub. Hub names must be unique. They use
      the following form:
      `projects/{project_number}/locations/global/hubs/{hub_id}`
    requestId: Optional. A request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server knows to
      ignore the request if it has already been completed. The server
      guarantees that a request doesn't result in creation of duplicate
      commitments for at least 60 minutes. For example, consider a situation
      where you make an initial request and the request times out. If you make
      the request again with the same request ID, the server can check to see
      whether the original operation was received. If it was, the server
      ignores the second request. This behavior prevents clients from
      mistakenly creating duplicate commitments. The request ID must be a
      valid UUID, with the exception that zero UUID is not supported
      (00000000-0000-0000-0000-000000000000).
    updateMask: Optional. In the case of an update to an existing hub, field
      mask is used to specify the fields to be overwritten. The fields
      specified in the update_mask are relative to the resource, not the full
      request. A field is overwritten if it is in the mask. If the user does
      not provide a mask, then all fields are overwritten.
  """

  hub = _messages.MessageField('Hub', 1)
  name = _messages.StringField(2, required=True)
  requestId = _messages.StringField(3)
  updateMask = _messages.StringField(4)


class NetworkconnectivityProjectsLocationsGlobalHubsRejectSpokeRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalHubsRejectSpokeRequest
  object.

  Fields:
    name: Required. The name of the hub from which to reject the spoke.
    rejectHubSpokeRequest: A RejectHubSpokeRequest resource to be passed as
      the request body.
  """

  name = _messages.StringField(1, required=True)
  rejectHubSpokeRequest = _messages.MessageField('RejectHubSpokeRequest', 2)


class NetworkconnectivityProjectsLocationsGlobalHubsRouteTablesGetRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalHubsRouteTablesGetRequest
  object.

  Fields:
    name: Required. The name of the route table resource.
  """

  name = _messages.StringField(1, required=True)


class NetworkconnectivityProjectsLocationsGlobalHubsRouteTablesListRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalHubsRouteTablesListRequest
  object.

  Fields:
    filter: An expression that filters the list of results.
    orderBy: Sort the results by a certain order.
    pageSize: The maximum number of results to return per page.
    pageToken: The page token.
    parent: Required. The parent resource's name.
  """

  filter = _messages.StringField(1)
  orderBy = _messages.StringField(2)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)
  parent = _messages.StringField(5, required=True)


class NetworkconnectivityProjectsLocationsGlobalHubsRouteTablesRoutesGetRequest(_messages.Message):
  r"""A
  NetworkconnectivityProjectsLocationsGlobalHubsRouteTablesRoutesGetRequest
  object.

  Fields:
    name: Required. The name of the route resource.
  """

  name = _messages.StringField(1, required=True)


class NetworkconnectivityProjectsLocationsGlobalHubsRouteTablesRoutesListRequest(_messages.Message):
  r"""A
  NetworkconnectivityProjectsLocationsGlobalHubsRouteTablesRoutesListRequest
  object.

  Fields:
    filter: An expression that filters the list of results.
    orderBy: Sort the results by a certain order.
    pageSize: The maximum number of results to return per page.
    pageToken: The page token.
    parent: Required. The parent resource's name.
  """

  filter = _messages.StringField(1)
  orderBy = _messages.StringField(2)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)
  parent = _messages.StringField(5, required=True)


class NetworkconnectivityProjectsLocationsGlobalHubsSetIamPolicyRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalHubsSetIamPolicyRequest
  object.

  Fields:
    resource: REQUIRED: The resource for which the policy is being specified.
      See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
    setIamPolicyRequest: A SetIamPolicyRequest resource to be passed as the
      request body.
  """

  resource = _messages.StringField(1, required=True)
  setIamPolicyRequest = _messages.MessageField('SetIamPolicyRequest', 2)


class NetworkconnectivityProjectsLocationsGlobalHubsTestIamPermissionsRequest(_messages.Message):
  r"""A
  NetworkconnectivityProjectsLocationsGlobalHubsTestIamPermissionsRequest
  object.

  Fields:
    resource: REQUIRED: The resource for which the policy detail is being
      requested. See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
    testIamPermissionsRequest: A TestIamPermissionsRequest resource to be
      passed as the request body.
  """

  resource = _messages.StringField(1, required=True)
  testIamPermissionsRequest = _messages.MessageField('TestIamPermissionsRequest', 2)


class NetworkconnectivityProjectsLocationsGlobalPolicyBasedRoutesCreateRequest(_messages.Message):
  r"""A
  NetworkconnectivityProjectsLocationsGlobalPolicyBasedRoutesCreateRequest
  object.

  Fields:
    parent: Required. The parent resource's name of the PolicyBasedRoute.
    policyBasedRoute: A PolicyBasedRoute resource to be passed as the request
      body.
    policyBasedRouteId: Required. Unique id for the policy-based route to
      create.
    requestId: Optional. An optional request ID to identify requests. Specify
      a unique request ID so that if you must retry your request, the server
      will know to ignore the request if it has already been completed. The
      server will guarantee that for at least 60 minutes since the first
      request. For example, consider a situation where you make an initial
      request and the request times out. If you make the request again with
      the same request ID, the server can check if original operation with the
      same request ID was received, and if so, will ignore the second request.
      This prevents clients from accidentally creating duplicate commitments.
      The request ID must be a valid UUID with the exception that zero UUID is
      not supported (00000000-0000-0000-0000-000000000000).
  """

  parent = _messages.StringField(1, required=True)
  policyBasedRoute = _messages.MessageField('PolicyBasedRoute', 2)
  policyBasedRouteId = _messages.StringField(3)
  requestId = _messages.StringField(4)


class NetworkconnectivityProjectsLocationsGlobalPolicyBasedRoutesDeleteRequest(_messages.Message):
  r"""A
  NetworkconnectivityProjectsLocationsGlobalPolicyBasedRoutesDeleteRequest
  object.

  Fields:
    name: Required. Name of the policy-based route resource to delete.
    requestId: Optional. An optional request ID to identify requests. Specify
      a unique request ID so that if you must retry your request, the server
      will know to ignore the request if it has already been completed. The
      server will guarantee that for at least 60 minutes after the first
      request. For example, consider a situation where you make an initial
      request and the request times out. If you make the request again with
      the same request ID, the server can check if original operation with the
      same request ID was received, and if so, will ignore the second request.
      This prevents clients from accidentally creating duplicate commitments.
      The request ID must be a valid UUID with the exception that zero UUID is
      not supported (00000000-0000-0000-0000-000000000000).
  """

  name = _messages.StringField(1, required=True)
  requestId = _messages.StringField(2)


class NetworkconnectivityProjectsLocationsGlobalPolicyBasedRoutesGetIamPolicyRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalPolicyBasedRoutesGetIamPolic
  yRequest object.

  Fields:
    options_requestedPolicyVersion: Optional. The maximum policy version that
      will be used to format the policy. Valid values are 0, 1, and 3.
      Requests specifying an invalid value will be rejected. Requests for
      policies with any conditional role bindings must specify version 3.
      Policies with no conditional role bindings may specify any valid value
      or leave the field unset. The policy in the response might use the
      policy version that you specified, or it might use a lower policy
      version. For example, if you specify version 3, but the policy has no
      conditional role bindings, the response uses version 1. To learn which
      resources support conditions in their IAM policies, see the [IAM
      documentation](https://cloud.google.com/iam/help/conditions/resource-
      policies).
    resource: REQUIRED: The resource for which the policy is being requested.
      See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
  """

  options_requestedPolicyVersion = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  resource = _messages.StringField(2, required=True)


class NetworkconnectivityProjectsLocationsGlobalPolicyBasedRoutesGetRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalPolicyBasedRoutesGetRequest
  object.

  Fields:
    name: Required. Name of the PolicyBasedRoute resource to get.
  """

  name = _messages.StringField(1, required=True)


class NetworkconnectivityProjectsLocationsGlobalPolicyBasedRoutesListRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalPolicyBasedRoutesListRequest
  object.

  Fields:
    filter: A filter expression that filters the results listed in the
      response.
    orderBy: Sort the results by a certain order.
    pageSize: The maximum number of results per page that should be returned.
    pageToken: The page token.
    parent: Required. The parent resource's name.
  """

  filter = _messages.StringField(1)
  orderBy = _messages.StringField(2)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)
  parent = _messages.StringField(5, required=True)


class NetworkconnectivityProjectsLocationsGlobalPolicyBasedRoutesSetIamPolicyRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalPolicyBasedRoutesSetIamPolic
  yRequest object.

  Fields:
    resource: REQUIRED: The resource for which the policy is being specified.
      See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
    setIamPolicyRequest: A SetIamPolicyRequest resource to be passed as the
      request body.
  """

  resource = _messages.StringField(1, required=True)
  setIamPolicyRequest = _messages.MessageField('SetIamPolicyRequest', 2)


class NetworkconnectivityProjectsLocationsGlobalPolicyBasedRoutesTestIamPermissionsRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsGlobalPolicyBasedRoutesTestIamPerm
  issionsRequest object.

  Fields:
    resource: REQUIRED: The resource for which the policy detail is being
      requested. See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
    testIamPermissionsRequest: A TestIamPermissionsRequest resource to be
      passed as the request body.
  """

  resource = _messages.StringField(1, required=True)
  testIamPermissionsRequest = _messages.MessageField('TestIamPermissionsRequest', 2)


class NetworkconnectivityProjectsLocationsInternalRangesCreateRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsInternalRangesCreateRequest
  object.

  Fields:
    internalRange: A InternalRange resource to be passed as the request body.
    internalRangeId: Optional. Resource ID (i.e. 'foo' in
      '[...]/projects/p/locations/l/internalRanges/foo') See
      https://google.aip.dev/122#resource-id-segments Unique per location.
    parent: Required. The parent resource's name of the internal range.
    requestId: Optional. An optional request ID to identify requests. Specify
      a unique request ID so that if you must retry your request, the server
      will know to ignore the request if it has already been completed. The
      server will guarantee that for at least 60 minutes since the first
      request. For example, consider a situation where you make an initial
      request and the request times out. If you make the request again with
      the same request ID, the server can check if original operation with the
      same request ID was received, and if so, will ignore the second request.
      This prevents clients from accidentally creating duplicate commitments.
      The request ID must be a valid UUID with the exception that zero UUID is
      not supported (00000000-0000-0000-0000-000000000000).
  """

  internalRange = _messages.MessageField('InternalRange', 1)
  internalRangeId = _messages.StringField(2)
  parent = _messages.StringField(3, required=True)
  requestId = _messages.StringField(4)


class NetworkconnectivityProjectsLocationsInternalRangesDeleteRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsInternalRangesDeleteRequest
  object.

  Fields:
    name: Required. The name of the internal range to delete.
    requestId: Optional. An optional request ID to identify requests. Specify
      a unique request ID so that if you must retry your request, the server
      will know to ignore the request if it has already been completed. The
      server will guarantee that for at least 60 minutes after the first
      request. For example, consider a situation where you make an initial
      request and the request times out. If you make the request again with
      the same request ID, the server can check if original operation with the
      same request ID was received, and if so, will ignore the second request.
      This prevents clients from accidentally creating duplicate commitments.
      The request ID must be a valid UUID with the exception that zero UUID is
      not supported (00000000-0000-0000-0000-000000000000).
  """

  name = _messages.StringField(1, required=True)
  requestId = _messages.StringField(2)


class NetworkconnectivityProjectsLocationsInternalRangesGetRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsInternalRangesGetRequest object.

  Fields:
    name: Required. Name of the InternalRange to get.
  """

  name = _messages.StringField(1, required=True)


class NetworkconnectivityProjectsLocationsInternalRangesListRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsInternalRangesListRequest object.

  Fields:
    filter: A filter expression that filters the results listed in the
      response.
    orderBy: Sort the results by a certain order.
    pageSize: The maximum number of results per page that should be returned.
    pageToken: The page token.
    parent: Required. The parent resource's name.
  """

  filter = _messages.StringField(1)
  orderBy = _messages.StringField(2)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)
  parent = _messages.StringField(5, required=True)


class NetworkconnectivityProjectsLocationsInternalRangesPatchRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsInternalRangesPatchRequest object.

  Fields:
    internalRange: A InternalRange resource to be passed as the request body.
    name: Immutable. The name of an internal range. Format:
      projects/{project}/locations/{location}/internalRanges/{internal_range}
      See: https://google.aip.dev/122#fields-representing-resource-names
    requestId: Optional. An optional request ID to identify requests. Specify
      a unique request ID so that if you must retry your request, the server
      will know to ignore the request if it has already been completed. The
      server will guarantee that for at least 60 minutes since the first
      request. For example, consider a situation where you make an initial
      request and the request times out. If you make the request again with
      the same request ID, the server can check if original operation with the
      same request ID was received, and if so, will ignore the second request.
      This prevents clients from accidentally creating duplicate commitments.
      The request ID must be a valid UUID with the exception that zero UUID is
      not supported (00000000-0000-0000-0000-000000000000).
    updateMask: Optional. Field mask is used to specify the fields to be
      overwritten in the InternalRange resource by the update. The fields
      specified in the update_mask are relative to the resource, not the full
      request. A field will be overwritten if it is in the mask. If the user
      does not provide a mask then all fields will be overwritten.
  """

  internalRange = _messages.MessageField('InternalRange', 1)
  name = _messages.StringField(2, required=True)
  requestId = _messages.StringField(3)
  updateMask = _messages.StringField(4)


class NetworkconnectivityProjectsLocationsListRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsListRequest object.

  Fields:
    filter: A filter to narrow down results to a preferred subset. The
      filtering language accepts strings like `"displayName=tokyo"`, and is
      documented in more detail in [AIP-160](https://google.aip.dev/160).
    name: The resource that owns the locations collection, if applicable.
    pageSize: The maximum number of results to return. If not set, the service
      selects a default.
    pageToken: A page token received from the `next_page_token` field in the
      response. Send that page token to receive the subsequent page.
  """

  filter = _messages.StringField(1)
  name = _messages.StringField(2, required=True)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)


class NetworkconnectivityProjectsLocationsOperationsCancelRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsOperationsCancelRequest object.

  Fields:
    googleLongrunningCancelOperationRequest: A
      GoogleLongrunningCancelOperationRequest resource to be passed as the
      request body.
    name: The name of the operation resource to be cancelled.
  """

  googleLongrunningCancelOperationRequest = _messages.MessageField('GoogleLongrunningCancelOperationRequest', 1)
  name = _messages.StringField(2, required=True)


class NetworkconnectivityProjectsLocationsOperationsDeleteRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsOperationsDeleteRequest object.

  Fields:
    name: The name of the operation resource to be deleted.
  """

  name = _messages.StringField(1, required=True)


class NetworkconnectivityProjectsLocationsOperationsGetRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsOperationsGetRequest object.

  Fields:
    name: The name of the operation resource.
  """

  name = _messages.StringField(1, required=True)


class NetworkconnectivityProjectsLocationsOperationsListRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsOperationsListRequest object.

  Fields:
    filter: The standard list filter.
    name: The name of the operation's parent resource.
    pageSize: The standard list page size.
    pageToken: The standard list page token.
  """

  filter = _messages.StringField(1)
  name = _messages.StringField(2, required=True)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)


class NetworkconnectivityProjectsLocationsServiceClassesCreateRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsServiceClassesCreateRequest
  object.

  Fields:
    parent: Required. The parent resource's name of the ServiceClass. ex.
      projects/123/locations/us-east1
    requestId: Optional. An optional request ID to identify requests. Specify
      a unique request ID so that if you must retry your request, the server
      will know to ignore the request if it has already been completed. The
      server will guarantee that for at least 60 minutes since the first
      request. For example, consider a situation where you make an initial
      request and the request times out. If you make the request again with
      the same request ID, the server can check if original operation with the
      same request ID was received, and if so, will ignore the second request.
      This prevents clients from accidentally creating duplicate commitments.
      The request ID must be a valid UUID with the exception that zero UUID is
      not supported (00000000-0000-0000-0000-000000000000).
    serviceClass: A ServiceClass resource to be passed as the request body.
    serviceClassId: Optional. Resource ID (i.e. 'foo' in
      '[...]/projects/p/locations/l/serviceClasses/foo') See
      https://google.aip.dev/122#resource-id-segments Unique per location. If
      one is not provided, one will be generated.
  """

  parent = _messages.StringField(1, required=True)
  requestId = _messages.StringField(2)
  serviceClass = _messages.MessageField('ServiceClass', 3)
  serviceClassId = _messages.StringField(4)


class NetworkconnectivityProjectsLocationsServiceClassesDeleteRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsServiceClassesDeleteRequest
  object.

  Fields:
    etag: Optional. The etag is computed by the server, and may be sent on
      update and delete requests to ensure the client has an up-to-date value
      before proceeding.
    name: Required. The name of the ServiceClass to delete.
    requestId: Optional. An optional request ID to identify requests. Specify
      a unique request ID so that if you must retry your request, the server
      will know to ignore the request if it has already been completed. The
      server will guarantee that for at least 60 minutes after the first
      request. For example, consider a situation where you make an initial
      request and the request times out. If you make the request again with
      the same request ID, the server can check if original operation with the
      same request ID was received, and if so, will ignore the second request.
      This prevents clients from accidentally creating duplicate commitments.
      The request ID must be a valid UUID with the exception that zero UUID is
      not supported (00000000-0000-0000-0000-000000000000).
  """

  etag = _messages.StringField(1)
  name = _messages.StringField(2, required=True)
  requestId = _messages.StringField(3)


class NetworkconnectivityProjectsLocationsServiceClassesGetIamPolicyRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsServiceClassesGetIamPolicyRequest
  object.

  Fields:
    options_requestedPolicyVersion: Optional. The maximum policy version that
      will be used to format the policy. Valid values are 0, 1, and 3.
      Requests specifying an invalid value will be rejected. Requests for
      policies with any conditional role bindings must specify version 3.
      Policies with no conditional role bindings may specify any valid value
      or leave the field unset. The policy in the response might use the
      policy version that you specified, or it might use a lower policy
      version. For example, if you specify version 3, but the policy has no
      conditional role bindings, the response uses version 1. To learn which
      resources support conditions in their IAM policies, see the [IAM
      documentation](https://cloud.google.com/iam/help/conditions/resource-
      policies).
    resource: REQUIRED: The resource for which the policy is being requested.
      See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
  """

  options_requestedPolicyVersion = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  resource = _messages.StringField(2, required=True)


class NetworkconnectivityProjectsLocationsServiceClassesGetRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsServiceClassesGetRequest object.

  Fields:
    name: Required. Name of the ServiceClass to get.
  """

  name = _messages.StringField(1, required=True)


class NetworkconnectivityProjectsLocationsServiceClassesListRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsServiceClassesListRequest object.

  Fields:
    filter: A filter expression that filters the results listed in the
      response.
    orderBy: Sort the results by a certain order.
    pageSize: The maximum number of results per page that should be returned.
    pageToken: The page token.
    parent: Required. The parent resource's name. ex.
      projects/123/locations/us-east1
  """

  filter = _messages.StringField(1)
  orderBy = _messages.StringField(2)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)
  parent = _messages.StringField(5, required=True)


class NetworkconnectivityProjectsLocationsServiceClassesPatchRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsServiceClassesPatchRequest object.

  Fields:
    name: Immutable. The name of a ServiceClass resource. Format:
      projects/{project}/locations/{location}/serviceClasses/{service_class}
      See: https://google.aip.dev/122#fields-representing-resource-names
    requestId: Optional. An optional request ID to identify requests. Specify
      a unique request ID so that if you must retry your request, the server
      will know to ignore the request if it has already been completed. The
      server will guarantee that for at least 60 minutes since the first
      request. For example, consider a situation where you make an initial
      request and the request times out. If you make the request again with
      the same request ID, the server can check if original operation with the
      same request ID was received, and if so, will ignore the second request.
      This prevents clients from accidentally creating duplicate commitments.
      The request ID must be a valid UUID with the exception that zero UUID is
      not supported (00000000-0000-0000-0000-000000000000).
    serviceClass: A ServiceClass resource to be passed as the request body.
    updateMask: Optional. Field mask is used to specify the fields to be
      overwritten in the ServiceClass resource by the update. The fields
      specified in the update_mask are relative to the resource, not the full
      request. A field will be overwritten if it is in the mask. If the user
      does not provide a mask then all fields will be overwritten.
  """

  name = _messages.StringField(1, required=True)
  requestId = _messages.StringField(2)
  serviceClass = _messages.MessageField('ServiceClass', 3)
  updateMask = _messages.StringField(4)


class NetworkconnectivityProjectsLocationsServiceClassesSetIamPolicyRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsServiceClassesSetIamPolicyRequest
  object.

  Fields:
    resource: REQUIRED: The resource for which the policy is being specified.
      See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
    setIamPolicyRequest: A SetIamPolicyRequest resource to be passed as the
      request body.
  """

  resource = _messages.StringField(1, required=True)
  setIamPolicyRequest = _messages.MessageField('SetIamPolicyRequest', 2)


class NetworkconnectivityProjectsLocationsServiceClassesTestIamPermissionsRequest(_messages.Message):
  r"""A
  NetworkconnectivityProjectsLocationsServiceClassesTestIamPermissionsRequest
  object.

  Fields:
    resource: REQUIRED: The resource for which the policy detail is being
      requested. See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
    testIamPermissionsRequest: A TestIamPermissionsRequest resource to be
      passed as the request body.
  """

  resource = _messages.StringField(1, required=True)
  testIamPermissionsRequest = _messages.MessageField('TestIamPermissionsRequest', 2)


class NetworkconnectivityProjectsLocationsServiceConnectionMapsCreateRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsServiceConnectionMapsCreateRequest
  object.

  Fields:
    parent: Required. The parent resource's name of the ServiceConnectionMap.
      ex. projects/123/locations/us-east1
    requestId: Optional. An optional request ID to identify requests. Specify
      a unique request ID so that if you must retry your request, the server
      will know to ignore the request if it has already been completed. The
      server will guarantee that for at least 60 minutes since the first
      request. For example, consider a situation where you make an initial
      request and the request times out. If you make the request again with
      the same request ID, the server can check if original operation with the
      same request ID was received, and if so, will ignore the second request.
      This prevents clients from accidentally creating duplicate commitments.
      The request ID must be a valid UUID with the exception that zero UUID is
      not supported (00000000-0000-0000-0000-000000000000).
    serviceConnectionMap: A ServiceConnectionMap resource to be passed as the
      request body.
    serviceConnectionMapId: Optional. Resource ID (i.e. 'foo' in
      '[...]/projects/p/locations/l/serviceConnectionMaps/foo') See
      https://google.aip.dev/122#resource-id-segments Unique per location. If
      one is not provided, one will be generated.
  """

  parent = _messages.StringField(1, required=True)
  requestId = _messages.StringField(2)
  serviceConnectionMap = _messages.MessageField('ServiceConnectionMap', 3)
  serviceConnectionMapId = _messages.StringField(4)


class NetworkconnectivityProjectsLocationsServiceConnectionMapsDeleteRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsServiceConnectionMapsDeleteRequest
  object.

  Fields:
    etag: Optional. The etag is computed by the server, and may be sent on
      update and delete requests to ensure the client has an up-to-date value
      before proceeding.
    name: Required. The name of the ServiceConnectionMap to delete.
    requestId: Optional. An optional request ID to identify requests. Specify
      a unique request ID so that if you must retry your request, the server
      will know to ignore the request if it has already been completed. The
      server will guarantee that for at least 60 minutes after the first
      request. For example, consider a situation where you make an initial
      request and the request times out. If you make the request again with
      the same request ID, the server can check if original operation with the
      same request ID was received, and if so, will ignore the second request.
      This prevents clients from accidentally creating duplicate commitments.
      The request ID must be a valid UUID with the exception that zero UUID is
      not supported (00000000-0000-0000-0000-000000000000).
  """

  etag = _messages.StringField(1)
  name = _messages.StringField(2, required=True)
  requestId = _messages.StringField(3)


class NetworkconnectivityProjectsLocationsServiceConnectionMapsGetIamPolicyRequest(_messages.Message):
  r"""A
  NetworkconnectivityProjectsLocationsServiceConnectionMapsGetIamPolicyRequest
  object.

  Fields:
    options_requestedPolicyVersion: Optional. The maximum policy version that
      will be used to format the policy. Valid values are 0, 1, and 3.
      Requests specifying an invalid value will be rejected. Requests for
      policies with any conditional role bindings must specify version 3.
      Policies with no conditional role bindings may specify any valid value
      or leave the field unset. The policy in the response might use the
      policy version that you specified, or it might use a lower policy
      version. For example, if you specify version 3, but the policy has no
      conditional role bindings, the response uses version 1. To learn which
      resources support conditions in their IAM policies, see the [IAM
      documentation](https://cloud.google.com/iam/help/conditions/resource-
      policies).
    resource: REQUIRED: The resource for which the policy is being requested.
      See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
  """

  options_requestedPolicyVersion = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  resource = _messages.StringField(2, required=True)


class NetworkconnectivityProjectsLocationsServiceConnectionMapsGetRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsServiceConnectionMapsGetRequest
  object.

  Fields:
    name: Required. Name of the ServiceConnectionMap to get.
  """

  name = _messages.StringField(1, required=True)


class NetworkconnectivityProjectsLocationsServiceConnectionMapsListRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsServiceConnectionMapsListRequest
  object.

  Fields:
    filter: A filter expression that filters the results listed in the
      response.
    orderBy: Sort the results by a certain order.
    pageSize: The maximum number of results per page that should be returned.
    pageToken: The page token.
    parent: Required. The parent resource's name. ex.
      projects/123/locations/us-east1
  """

  filter = _messages.StringField(1)
  orderBy = _messages.StringField(2)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)
  parent = _messages.StringField(5, required=True)


class NetworkconnectivityProjectsLocationsServiceConnectionMapsPatchRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsServiceConnectionMapsPatchRequest
  object.

  Fields:
    name: Immutable. The name of a ServiceConnectionMap. Format: projects/{pro
      ject}/locations/{location}/serviceConnectionMaps/{service_connection_map
      } See: https://google.aip.dev/122#fields-representing-resource-names
    requestId: Optional. An optional request ID to identify requests. Specify
      a unique request ID so that if you must retry your request, the server
      will know to ignore the request if it has already been completed. The
      server will guarantee that for at least 60 minutes since the first
      request. For example, consider a situation where you make an initial
      request and the request times out. If you make the request again with
      the same request ID, the server can check if original operation with the
      same request ID was received, and if so, will ignore the second request.
      This prevents clients from accidentally creating duplicate commitments.
      The request ID must be a valid UUID with the exception that zero UUID is
      not supported (00000000-0000-0000-0000-000000000000).
    serviceConnectionMap: A ServiceConnectionMap resource to be passed as the
      request body.
    updateMask: Optional. Field mask is used to specify the fields to be
      overwritten in the ServiceConnectionMap resource by the update. The
      fields specified in the update_mask are relative to the resource, not
      the full request. A field will be overwritten if it is in the mask. If
      the user does not provide a mask then all fields will be overwritten.
  """

  name = _messages.StringField(1, required=True)
  requestId = _messages.StringField(2)
  serviceConnectionMap = _messages.MessageField('ServiceConnectionMap', 3)
  updateMask = _messages.StringField(4)


class NetworkconnectivityProjectsLocationsServiceConnectionMapsSetIamPolicyRequest(_messages.Message):
  r"""A
  NetworkconnectivityProjectsLocationsServiceConnectionMapsSetIamPolicyRequest
  object.

  Fields:
    resource: REQUIRED: The resource for which the policy is being specified.
      See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
    setIamPolicyRequest: A SetIamPolicyRequest resource to be passed as the
      request body.
  """

  resource = _messages.StringField(1, required=True)
  setIamPolicyRequest = _messages.MessageField('SetIamPolicyRequest', 2)


class NetworkconnectivityProjectsLocationsServiceConnectionMapsTestIamPermissionsRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsServiceConnectionMapsTestIamPermis
  sionsRequest object.

  Fields:
    resource: REQUIRED: The resource for which the policy detail is being
      requested. See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
    testIamPermissionsRequest: A TestIamPermissionsRequest resource to be
      passed as the request body.
  """

  resource = _messages.StringField(1, required=True)
  testIamPermissionsRequest = _messages.MessageField('TestIamPermissionsRequest', 2)


class NetworkconnectivityProjectsLocationsServiceConnectionPoliciesCreateRequest(_messages.Message):
  r"""A
  NetworkconnectivityProjectsLocationsServiceConnectionPoliciesCreateRequest
  object.

  Fields:
    parent: Required. The parent resource's name of the
      ServiceConnectionPolicy. ex. projects/123/locations/us-east1
    requestId: Optional. An optional request ID to identify requests. Specify
      a unique request ID so that if you must retry your request, the server
      will know to ignore the request if it has already been completed. The
      server will guarantee that for at least 60 minutes since the first
      request. For example, consider a situation where you make an initial
      request and the request times out. If you make the request again with
      the same request ID, the server can check if original operation with the
      same request ID was received, and if so, will ignore the second request.
      This prevents clients from accidentally creating duplicate commitments.
      The request ID must be a valid UUID with the exception that zero UUID is
      not supported (00000000-0000-0000-0000-000000000000).
    serviceConnectionPolicy: A ServiceConnectionPolicy resource to be passed
      as the request body.
    serviceConnectionPolicyId: Optional. Resource ID (i.e. 'foo' in
      '[...]/projects/p/locations/l/serviceConnectionPolicies/foo') See
      https://google.aip.dev/122#resource-id-segments Unique per location.
  """

  parent = _messages.StringField(1, required=True)
  requestId = _messages.StringField(2)
  serviceConnectionPolicy = _messages.MessageField('ServiceConnectionPolicy', 3)
  serviceConnectionPolicyId = _messages.StringField(4)


class NetworkconnectivityProjectsLocationsServiceConnectionPoliciesDeleteRequest(_messages.Message):
  r"""A
  NetworkconnectivityProjectsLocationsServiceConnectionPoliciesDeleteRequest
  object.

  Fields:
    etag: Optional. The etag is computed by the server, and may be sent on
      update and delete requests to ensure the client has an up-to-date value
      before proceeding.
    name: Required. The name of the ServiceConnectionPolicy to delete.
    requestId: Optional. An optional request ID to identify requests. Specify
      a unique request ID so that if you must retry your request, the server
      will know to ignore the request if it has already been completed. The
      server will guarantee that for at least 60 minutes after the first
      request. For example, consider a situation where you make an initial
      request and the request times out. If you make the request again with
      the same request ID, the server can check if original operation with the
      same request ID was received, and if so, will ignore the second request.
      This prevents clients from accidentally creating duplicate commitments.
      The request ID must be a valid UUID with the exception that zero UUID is
      not supported (00000000-0000-0000-0000-000000000000).
  """

  etag = _messages.StringField(1)
  name = _messages.StringField(2, required=True)
  requestId = _messages.StringField(3)


class NetworkconnectivityProjectsLocationsServiceConnectionPoliciesGetIamPolicyRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsServiceConnectionPoliciesGetIamPol
  icyRequest object.

  Fields:
    options_requestedPolicyVersion: Optional. The maximum policy version that
      will be used to format the policy. Valid values are 0, 1, and 3.
      Requests specifying an invalid value will be rejected. Requests for
      policies with any conditional role bindings must specify version 3.
      Policies with no conditional role bindings may specify any valid value
      or leave the field unset. The policy in the response might use the
      policy version that you specified, or it might use a lower policy
      version. For example, if you specify version 3, but the policy has no
      conditional role bindings, the response uses version 1. To learn which
      resources support conditions in their IAM policies, see the [IAM
      documentation](https://cloud.google.com/iam/help/conditions/resource-
      policies).
    resource: REQUIRED: The resource for which the policy is being requested.
      See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
  """

  options_requestedPolicyVersion = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  resource = _messages.StringField(2, required=True)


class NetworkconnectivityProjectsLocationsServiceConnectionPoliciesGetRequest(_messages.Message):
  r"""A
  NetworkconnectivityProjectsLocationsServiceConnectionPoliciesGetRequest
  object.

  Fields:
    name: Required. Name of the ServiceConnectionPolicy to get.
  """

  name = _messages.StringField(1, required=True)


class NetworkconnectivityProjectsLocationsServiceConnectionPoliciesListRequest(_messages.Message):
  r"""A
  NetworkconnectivityProjectsLocationsServiceConnectionPoliciesListRequest
  object.

  Fields:
    filter: A filter expression that filters the results listed in the
      response.
    orderBy: Sort the results by a certain order.
    pageSize: The maximum number of results per page that should be returned.
    pageToken: The page token.
    parent: Required. The parent resource's name. ex.
      projects/123/locations/us-east1
  """

  filter = _messages.StringField(1)
  orderBy = _messages.StringField(2)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)
  parent = _messages.StringField(5, required=True)


class NetworkconnectivityProjectsLocationsServiceConnectionPoliciesPatchRequest(_messages.Message):
  r"""A
  NetworkconnectivityProjectsLocationsServiceConnectionPoliciesPatchRequest
  object.

  Fields:
    name: Immutable. The name of a ServiceConnectionPolicy. Format: projects/{
      project}/locations/{location}/serviceConnectionPolicies/{service_connect
      ion_policy} See: https://google.aip.dev/122#fields-representing-
      resource-names
    requestId: Optional. An optional request ID to identify requests. Specify
      a unique request ID so that if you must retry your request, the server
      will know to ignore the request if it has already been completed. The
      server will guarantee that for at least 60 minutes since the first
      request. For example, consider a situation where you make an initial
      request and the request times out. If you make the request again with
      the same request ID, the server can check if original operation with the
      same request ID was received, and if so, will ignore the second request.
      This prevents clients from accidentally creating duplicate commitments.
      The request ID must be a valid UUID with the exception that zero UUID is
      not supported (00000000-0000-0000-0000-000000000000).
    serviceConnectionPolicy: A ServiceConnectionPolicy resource to be passed
      as the request body.
    updateMask: Optional. Field mask is used to specify the fields to be
      overwritten in the ServiceConnectionPolicy resource by the update. The
      fields specified in the update_mask are relative to the resource, not
      the full request. A field will be overwritten if it is in the mask. If
      the user does not provide a mask then all fields will be overwritten.
  """

  name = _messages.StringField(1, required=True)
  requestId = _messages.StringField(2)
  serviceConnectionPolicy = _messages.MessageField('ServiceConnectionPolicy', 3)
  updateMask = _messages.StringField(4)


class NetworkconnectivityProjectsLocationsServiceConnectionPoliciesSetIamPolicyRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsServiceConnectionPoliciesSetIamPol
  icyRequest object.

  Fields:
    resource: REQUIRED: The resource for which the policy is being specified.
      See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
    setIamPolicyRequest: A SetIamPolicyRequest resource to be passed as the
      request body.
  """

  resource = _messages.StringField(1, required=True)
  setIamPolicyRequest = _messages.MessageField('SetIamPolicyRequest', 2)


class NetworkconnectivityProjectsLocationsServiceConnectionPoliciesTestIamPermissionsRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsServiceConnectionPoliciesTestIamPe
  rmissionsRequest object.

  Fields:
    resource: REQUIRED: The resource for which the policy detail is being
      requested. See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
    testIamPermissionsRequest: A TestIamPermissionsRequest resource to be
      passed as the request body.
  """

  resource = _messages.StringField(1, required=True)
  testIamPermissionsRequest = _messages.MessageField('TestIamPermissionsRequest', 2)


class NetworkconnectivityProjectsLocationsServiceConnectionTokensCreateRequest(_messages.Message):
  r"""A
  NetworkconnectivityProjectsLocationsServiceConnectionTokensCreateRequest
  object.

  Fields:
    parent: Required. The parent resource's name of the
      ServiceConnectionToken. ex. projects/123/locations/us-east1
    requestId: Optional. An optional request ID to identify requests. Specify
      a unique request ID so that if you must retry your request, the server
      will know to ignore the request if it has already been completed. The
      server will guarantee that for at least 60 minutes since the first
      request. For example, consider a situation where you make an initial
      request and the request times out. If you make the request again with
      the same request ID, the server can check if original operation with the
      same request ID was received, and if so, will ignore the second request.
      This prevents clients from accidentally creating duplicate commitments.
      The request ID must be a valid UUID with the exception that zero UUID is
      not supported (00000000-0000-0000-0000-000000000000).
    serviceConnectionToken: A ServiceConnectionToken resource to be passed as
      the request body.
    serviceConnectionTokenId: Optional. Resource ID (i.e. 'foo' in
      '[...]/projects/p/locations/l/ServiceConnectionTokens/foo') See
      https://google.aip.dev/122#resource-id-segments Unique per location. If
      one is not provided, one will be generated.
  """

  parent = _messages.StringField(1, required=True)
  requestId = _messages.StringField(2)
  serviceConnectionToken = _messages.MessageField('ServiceConnectionToken', 3)
  serviceConnectionTokenId = _messages.StringField(4)


class NetworkconnectivityProjectsLocationsServiceConnectionTokensDeleteRequest(_messages.Message):
  r"""A
  NetworkconnectivityProjectsLocationsServiceConnectionTokensDeleteRequest
  object.

  Fields:
    etag: Optional. The etag is computed by the server, and may be sent on
      update and delete requests to ensure the client has an up-to-date value
      before proceeding.
    name: Required. The name of the ServiceConnectionToken to delete.
    requestId: Optional. An optional request ID to identify requests. Specify
      a unique request ID so that if you must retry your request, the server
      will know to ignore the request if it has already been completed. The
      server will guarantee that for at least 60 minutes after the first
      request. For example, consider a situation where you make an initial
      request and the request times out. If you make the request again with
      the same request ID, the server can check if original operation with the
      same request ID was received, and if so, will ignore the second request.
      This prevents clients from accidentally creating duplicate commitments.
      The request ID must be a valid UUID with the exception that zero UUID is
      not supported (00000000-0000-0000-0000-000000000000).
  """

  etag = _messages.StringField(1)
  name = _messages.StringField(2, required=True)
  requestId = _messages.StringField(3)


class NetworkconnectivityProjectsLocationsServiceConnectionTokensGetRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsServiceConnectionTokensGetRequest
  object.

  Fields:
    name: Required. Name of the ServiceConnectionToken to get.
  """

  name = _messages.StringField(1, required=True)


class NetworkconnectivityProjectsLocationsServiceConnectionTokensListRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsServiceConnectionTokensListRequest
  object.

  Fields:
    filter: A filter expression that filters the results listed in the
      response.
    orderBy: Sort the results by a certain order.
    pageSize: The maximum number of results per page that should be returned.
    pageToken: The page token.
    parent: Required. The parent resource's name. ex.
      projects/123/locations/us-east1
  """

  filter = _messages.StringField(1)
  orderBy = _messages.StringField(2)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)
  parent = _messages.StringField(5, required=True)


class NetworkconnectivityProjectsLocationsSpokesActivateRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsSpokesActivateRequest object.

  Fields:
    activateSpokeRequest: A ActivateSpokeRequest resource to be passed as the
      request body.
    name: Required. The name of the spoke to activate.
  """

  activateSpokeRequest = _messages.MessageField('ActivateSpokeRequest', 1)
  name = _messages.StringField(2, required=True)


class NetworkconnectivityProjectsLocationsSpokesCreateRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsSpokesCreateRequest object.

  Fields:
    parent: Required. The parent resource.
    requestId: Optional. A request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server knows to
      ignore the request if it has already been completed. The server
      guarantees that a request doesn't result in creation of duplicate
      commitments for at least 60 minutes. For example, consider a situation
      where you make an initial request and the request times out. If you make
      the request again with the same request ID, the server can check to see
      whether the original operation was received. If it was, the server
      ignores the second request. This behavior prevents clients from
      mistakenly creating duplicate commitments. The request ID must be a
      valid UUID, with the exception that zero UUID is not supported
      (00000000-0000-0000-0000-000000000000).
    spoke: A Spoke resource to be passed as the request body.
    spokeId: Required. Unique id for the spoke to create.
  """

  parent = _messages.StringField(1, required=True)
  requestId = _messages.StringField(2)
  spoke = _messages.MessageField('Spoke', 3)
  spokeId = _messages.StringField(4)


class NetworkconnectivityProjectsLocationsSpokesDeactivateRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsSpokesDeactivateRequest object.

  Fields:
    deactivateSpokeRequest: A DeactivateSpokeRequest resource to be passed as
      the request body.
    name: Required. The name of the spoke to deactivate.
  """

  deactivateSpokeRequest = _messages.MessageField('DeactivateSpokeRequest', 1)
  name = _messages.StringField(2, required=True)


class NetworkconnectivityProjectsLocationsSpokesDeleteRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsSpokesDeleteRequest object.

  Fields:
    name: Required. The name of the spoke to delete.
    requestId: Optional. A request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server knows to
      ignore the request if it has already been completed. The server
      guarantees that a request doesn't result in creation of duplicate
      commitments for at least 60 minutes. For example, consider a situation
      where you make an initial request and the request times out. If you make
      the request again with the same request ID, the server can check to see
      whether the original operation was received. If it was, the server
      ignores the second request. This behavior prevents clients from
      mistakenly creating duplicate commitments. The request ID must be a
      valid UUID, with the exception that zero UUID is not supported
      (00000000-0000-0000-0000-000000000000).
  """

  name = _messages.StringField(1, required=True)
  requestId = _messages.StringField(2)


class NetworkconnectivityProjectsLocationsSpokesGetIamPolicyRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsSpokesGetIamPolicyRequest object.

  Fields:
    options_requestedPolicyVersion: Optional. The maximum policy version that
      will be used to format the policy. Valid values are 0, 1, and 3.
      Requests specifying an invalid value will be rejected. Requests for
      policies with any conditional role bindings must specify version 3.
      Policies with no conditional role bindings may specify any valid value
      or leave the field unset. The policy in the response might use the
      policy version that you specified, or it might use a lower policy
      version. For example, if you specify version 3, but the policy has no
      conditional role bindings, the response uses version 1. To learn which
      resources support conditions in their IAM policies, see the [IAM
      documentation](https://cloud.google.com/iam/help/conditions/resource-
      policies).
    resource: REQUIRED: The resource for which the policy is being requested.
      See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
  """

  options_requestedPolicyVersion = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  resource = _messages.StringField(2, required=True)


class NetworkconnectivityProjectsLocationsSpokesGetRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsSpokesGetRequest object.

  Fields:
    name: Required. The name of the spoke resource.
  """

  name = _messages.StringField(1, required=True)


class NetworkconnectivityProjectsLocationsSpokesListRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsSpokesListRequest object.

  Fields:
    filter: An expression that filters the list of results.
    orderBy: Sort the results by a certain order.
    pageSize: The maximum number of results to return per page.
    pageToken: The page token.
    parent: Required. The parent resource.
  """

  filter = _messages.StringField(1)
  orderBy = _messages.StringField(2)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)
  parent = _messages.StringField(5, required=True)


class NetworkconnectivityProjectsLocationsSpokesPatchRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsSpokesPatchRequest object.

  Fields:
    name: Immutable. The name of the spoke. Spoke names must be unique. They
      use the following form:
      `projects/{project_number}/locations/{region}/spokes/{spoke_id}`
    requestId: Optional. A request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server knows to
      ignore the request if it has already been completed. The server
      guarantees that a request doesn't result in creation of duplicate
      commitments for at least 60 minutes. For example, consider a situation
      where you make an initial request and the request times out. If you make
      the request again with the same request ID, the server can check to see
      whether the original operation was received. If it was, the server
      ignores the second request. This behavior prevents clients from
      mistakenly creating duplicate commitments. The request ID must be a
      valid UUID, with the exception that zero UUID is not supported
      (00000000-0000-0000-0000-000000000000).
    spoke: A Spoke resource to be passed as the request body.
    updateMask: Optional. In the case of an update to an existing spoke, field
      mask is used to specify the fields to be overwritten. The fields
      specified in the update_mask are relative to the resource, not the full
      request. A field is overwritten if it is in the mask. If the user does
      not provide a mask, then all fields are overwritten.
  """

  name = _messages.StringField(1, required=True)
  requestId = _messages.StringField(2)
  spoke = _messages.MessageField('Spoke', 3)
  updateMask = _messages.StringField(4)


class NetworkconnectivityProjectsLocationsSpokesSetIamPolicyRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsSpokesSetIamPolicyRequest object.

  Fields:
    resource: REQUIRED: The resource for which the policy is being specified.
      See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
    setIamPolicyRequest: A SetIamPolicyRequest resource to be passed as the
      request body.
  """

  resource = _messages.StringField(1, required=True)
  setIamPolicyRequest = _messages.MessageField('SetIamPolicyRequest', 2)


class NetworkconnectivityProjectsLocationsSpokesTestIamPermissionsRequest(_messages.Message):
  r"""A NetworkconnectivityProjectsLocationsSpokesTestIamPermissionsRequest
  object.

  Fields:
    resource: REQUIRED: The resource for which the policy detail is being
      requested. See [Resource
      names](https://cloud.google.com/apis/design/resource_names) for the
      appropriate value for this field.
    testIamPermissionsRequest: A TestIamPermissionsRequest resource to be
      passed as the request body.
  """

  resource = _messages.StringField(1, required=True)
  testIamPermissionsRequest = _messages.MessageField('TestIamPermissionsRequest', 2)


class NextHopVpcNetwork(_messages.Message):
  r"""A NextHopVpcNetwork object.

  Fields:
    uri: The URI of the VPC network resource
  """

  uri = _messages.StringField(1)


class OperationMetadata(_messages.Message):
  r"""Represents the metadata of the long-running operation.

  Fields:
    apiVersion: Output only. API version used to start the operation.
    createTime: Output only. The time the operation was created.
    endTime: Output only. The time the operation finished running.
    requestedCancellation: Output only. Identifies whether the user has
      requested cancellation of the operation. Operations that have been
      cancelled successfully have Operation.error value with a
      google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
    statusMessage: Output only. Human-readable status of the operation, if
      any.
    target: Output only. Server-defined resource path for the target of the
      operation.
    verb: Output only. Name of the verb executed by the operation.
  """

  apiVersion = _messages.StringField(1)
  createTime = _messages.StringField(2)
  endTime = _messages.StringField(3)
  requestedCancellation = _messages.BooleanField(4)
  statusMessage = _messages.StringField(5)
  target = _messages.StringField(6)
  verb = _messages.StringField(7)


class Policy(_messages.Message):
  r"""An Identity and Access Management (IAM) policy, which specifies access
  controls for Google Cloud resources. A `Policy` is a collection of
  `bindings`. A `binding` binds one or more `members`, or principals, to a
  single `role`. Principals can be user accounts, service accounts, Google
  groups, and domains (such as G Suite). A `role` is a named list of
  permissions; each `role` can be an IAM predefined role or a user-created
  custom role. For some types of Google Cloud resources, a `binding` can also
  specify a `condition`, which is a logical expression that allows access to a
  resource only if the expression evaluates to `true`. A condition can add
  constraints based on attributes of the request, the resource, or both. To
  learn which resources support conditions in their IAM policies, see the [IAM
  documentation](https://cloud.google.com/iam/help/conditions/resource-
  policies). **JSON example:** ``` { "bindings": [ { "role":
  "roles/resourcemanager.organizationAdmin", "members": [
  "user:mike@example.com", "group:admins@example.com", "domain:google.com",
  "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role":
  "roles/resourcemanager.organizationViewer", "members": [
  "user:eve@example.com" ], "condition": { "title": "expirable access",
  "description": "Does not grant access after Sep 2020", "expression":
  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
  "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
  members: - user:mike@example.com - group:admins@example.com -
  domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com
  role: roles/resourcemanager.organizationAdmin - members: -
  user:eve@example.com role: roles/resourcemanager.organizationViewer
  condition: title: expirable access description: Does not grant access after
  Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z')
  etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features,
  see the [IAM documentation](https://cloud.google.com/iam/docs/).

  Fields:
    auditConfigs: Specifies cloud audit logging configuration for this policy.
    bindings: Associates a list of `members`, or principals, with a `role`.
      Optionally, may specify a `condition` that determines how and when the
      `bindings` are applied. Each of the `bindings` must contain at least one
      principal. The `bindings` in a `Policy` can refer to up to 1,500
      principals; up to 250 of these principals can be Google groups. Each
      occurrence of a principal counts towards these limits. For example, if
      the `bindings` grant 50 different roles to `user:alice@example.com`, and
      not to any other principal, then you can add another 1,450 principals to
      the `bindings` in the `Policy`.
    etag: `etag` is used for optimistic concurrency control as a way to help
      prevent simultaneous updates of a policy from overwriting each other. It
      is strongly suggested that systems make use of the `etag` in the read-
      modify-write cycle to perform policy updates in order to avoid race
      conditions: An `etag` is returned in the response to `getIamPolicy`, and
      systems are expected to put that etag in the request to `setIamPolicy`
      to ensure that their change will be applied to the same version of the
      policy. **Important:** If you use IAM Conditions, you must include the
      `etag` field whenever you call `setIamPolicy`. If you omit this field,
      then IAM allows you to overwrite a version `3` policy with a version `1`
      policy, and all of the conditions in the version `3` policy are lost.
    version: Specifies the format of the policy. Valid values are `0`, `1`,
      and `3`. Requests that specify an invalid value are rejected. Any
      operation that affects conditional role bindings must specify version
      `3`. This requirement applies to the following operations: * Getting a
      policy that includes a conditional role binding * Adding a conditional
      role binding to a policy * Changing a conditional role binding in a
      policy * Removing any role binding, with or without a condition, from a
      policy that includes conditions **Important:** If you use IAM
      Conditions, you must include the `etag` field whenever you call
      `setIamPolicy`. If you omit this field, then IAM allows you to overwrite
      a version `3` policy with a version `1` policy, and all of the
      conditions in the version `3` policy are lost. If a policy does not
      include any conditions, operations on that policy may specify any valid
      version or leave the field unset. To learn which resources support
      conditions in their IAM policies, see the [IAM
      documentation](https://cloud.google.com/iam/help/conditions/resource-
      policies).
  """

  auditConfigs = _messages.MessageField('AuditConfig', 1, repeated=True)
  bindings = _messages.MessageField('Binding', 2, repeated=True)
  etag = _messages.BytesField(3)
  version = _messages.IntegerField(4, variant=_messages.Variant.INT32)


class PolicyBasedRoute(_messages.Message):
  r"""Policy-based routes route L4 network traffic based on not just
  destination IP address, but also source IP address, protocol, and more. If a
  policy-based route conflicts with other types of routes, the policy-based
  route always take precedence.

  Enums:
    NextHopOtherRoutesValueValuesEnum: Optional. Other routes that will be
      referenced to determine the next hop of the packet.

  Messages:
    LabelsValue: User-defined labels.

  Fields:
    createTime: Output only. Time when the policy-based route was created.
    description: Optional. An optional description of this resource. Provide
      this field when you create the resource.
    filter: Required. The filter to match L4 traffic.
    interconnectAttachment: Optional. The interconnect attachments that this
      policy-based route applies to.
    kind: Output only. Type of this resource. Always
      networkconnectivity#policyBasedRoute for policy-based Route resources.
    labels: User-defined labels.
    name: Immutable. A unique name of the resource in the form of `projects/{p
      roject_number}/locations/global/PolicyBasedRoutes/{policy_based_route_id
      }`
    network: Required. Fully-qualified URL of the network that this route
      applies to, for example: projects/my-project/global/networks/my-network.
    nextHopIlbIp: Optional. The IP address of a global-access-enabled L4 ILB
      that is the next hop for matching packets. For this version, only
      nextHopIlbIp is supported.
    nextHopOtherRoutes: Optional. Other routes that will be referenced to
      determine the next hop of the packet.
    priority: Optional. The priority of this policy-based route. Priority is
      used to break ties in cases where there are more than one matching
      policy-based routes found. In cases where multiple policy-based routes
      are matched, the one with the lowest-numbered priority value wins. The
      default value is 1000. The priority value must be from 1 to 65535,
      inclusive.
    selfLink: Output only. Server-defined fully-qualified URL for this
      resource.
    updateTime: Output only. Time when the policy-based route was updated.
    virtualMachine: Optional. VM instances to which this policy-based route
      applies to.
    warnings: Output only. If potential misconfigurations are detected for
      this route, this field will be populated with warning messages.
  """

  class NextHopOtherRoutesValueValuesEnum(_messages.Enum):
    r"""Optional. Other routes that will be referenced to determine the next
    hop of the packet.

    Values:
      OTHER_ROUTES_UNSPECIFIED: Default value.
      DEFAULT_ROUTING: Use the routes from the default routing tables (system-
        generated routes, custom routes, peering route) to determine the next
        hop. This will effectively exclude matching packets being applied on
        other PBRs with a lower priority.
    """
    OTHER_ROUTES_UNSPECIFIED = 0
    DEFAULT_ROUTING = 1

  @encoding.MapUnrecognizedFields('additionalProperties')
  class LabelsValue(_messages.Message):
    r"""User-defined labels.

    Messages:
      AdditionalProperty: An additional property for a LabelsValue object.

    Fields:
      additionalProperties: Additional properties of type LabelsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a LabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  createTime = _messages.StringField(1)
  description = _messages.StringField(2)
  filter = _messages.MessageField('Filter', 3)
  interconnectAttachment = _messages.MessageField('InterconnectAttachment', 4)
  kind = _messages.StringField(5)
  labels = _messages.MessageField('LabelsValue', 6)
  name = _messages.StringField(7)
  network = _messages.StringField(8)
  nextHopIlbIp = _messages.StringField(9)
  nextHopOtherRoutes = _messages.EnumField('NextHopOtherRoutesValueValuesEnum', 10)
  priority = _messages.IntegerField(11, variant=_messages.Variant.INT32)
  selfLink = _messages.StringField(12)
  updateTime = _messages.StringField(13)
  virtualMachine = _messages.MessageField('VirtualMachine', 14)
  warnings = _messages.MessageField('Warnings', 15, repeated=True)


class ProducerPscConfig(_messages.Message):
  r"""The PSC configurations on producer side.

  Fields:
    serviceAttachmentUri: The resource path of a service attachment. Example:
      projects/{projectNumOrId}/regions/{region}/serviceAttachments/{resourceI
      d}.
  """

  serviceAttachmentUri = _messages.StringField(1)


class PscConfig(_messages.Message):
  r"""Configuration used for Private Service Connect connections. Used when
  Infrastructure is PSC.

  Fields:
    limit: Optional. Max number of PSC connections for this policy.
    subnetworks: The resource paths of subnetworks to use for IP address
      management. Example:
      projects/{projectNumOrId}/regions/{region}/subnetworks/{resourceId}.
  """

  limit = _messages.IntegerField(1)
  subnetworks = _messages.StringField(2, repeated=True)


class PscConnection(_messages.Message):
  r"""Information about a specific Private Service Connect connection.

  Enums:
    ErrorTypeValueValuesEnum: The error type indicates whether the error is
      consumer facing, producer facing or system internal.
    StateValueValuesEnum: State of the PSC Connection

  Fields:
    consumerAddress: The resource reference of the consumer address.
    consumerForwardingRule: The resource reference of the PSC Forwarding Rule
      within the consumer VPC.
    consumerTargetProject: The project where the PSC connection is created.
    error: The most recent error during operating this connection.
    errorInfo: Output only. The error info for the latest error during
      operating this connection.
    errorType: The error type indicates whether the error is consumer facing,
      producer facing or system internal.
    gceOperation: The last Compute Engine operation to setup PSC connection.
    pscConnectionId: The PSC connection id of the PSC forwarding rule.
    selectedSubnetwork: Output only. The URI of the subnetwork selected to
      allocate IP address for this connection.
    state: State of the PSC Connection
  """

  class ErrorTypeValueValuesEnum(_messages.Enum):
    r"""The error type indicates whether the error is consumer facing,
    producer facing or system internal.

    Values:
      CONNECTION_ERROR_TYPE_UNSPECIFIED: An invalid error type as the default
        case.
      ERROR_INTERNAL: The error is due to Service Automation system internal.
      ERROR_CONSUMER_SIDE: The error is due to the setup on consumer side.
      ERROR_PRODUCER_SIDE: The error is due to the setup on producer side.
    """
    CONNECTION_ERROR_TYPE_UNSPECIFIED = 0
    ERROR_INTERNAL = 1
    ERROR_CONSUMER_SIDE = 2
    ERROR_PRODUCER_SIDE = 3

  class StateValueValuesEnum(_messages.Enum):
    r"""State of the PSC Connection

    Values:
      STATE_UNSPECIFIED: An invalid state as the default case.
      ACTIVE: The connection is fully established and ready to use.
      FAILED: The connection is not functional since some resources on the
        connection fail to be created.
      CREATING: The connection is being created.
      DELETING: The connection is being deleted.
    """
    STATE_UNSPECIFIED = 0
    ACTIVE = 1
    FAILED = 2
    CREATING = 3
    DELETING = 4

  consumerAddress = _messages.StringField(1)
  consumerForwardingRule = _messages.StringField(2)
  consumerTargetProject = _messages.StringField(3)
  error = _messages.MessageField('GoogleRpcStatus', 4)
  errorInfo = _messages.MessageField('GoogleRpcErrorInfo', 5)
  errorType = _messages.EnumField('ErrorTypeValueValuesEnum', 6)
  gceOperation = _messages.StringField(7)
  pscConnectionId = _messages.StringField(8)
  selectedSubnetwork = _messages.StringField(9)
  state = _messages.EnumField('StateValueValuesEnum', 10)


class RejectHubSpokeRequest(_messages.Message):
  r"""The request for HubService.RejectHubSpoke.

  Fields:
    details: Optional. Additional information provided by the hub
      administrator.
    requestId: Optional. A request ID to identify requests. Specify a unique
      request ID so that if you must retry your request, the server knows to
      ignore the request if it has already been completed. The server
      guarantees that a request doesn't result in creation of duplicate
      commitments for at least 60 minutes. For example, consider a situation
      where you make an initial request and the request times out. If you make
      the request again with the same request ID, the server can check to see
      whether the original operation was received. If it was, the server
      ignores the second request. This behavior prevents clients from
      mistakenly creating duplicate commitments. The request ID must be a
      valid UUID, with the exception that zero UUID is not supported
      (00000000-0000-0000-0000-000000000000).
    spokeUri: Required. The URI of the spoke to reject from the hub.
  """

  details = _messages.StringField(1)
  requestId = _messages.StringField(2)
  spokeUri = _messages.StringField(3)


class RejectHubSpokeResponse(_messages.Message):
  r"""The response for HubService.RejectHubSpoke.

  Fields:
    spoke: The spoke that was operated on.
  """

  spoke = _messages.MessageField('Spoke', 1)


class Route(_messages.Message):
  r"""A route defines a path from VM instances within a spoke to a specific
  destination resource. Only VPC spokes have routes.

  Enums:
    StateValueValuesEnum: Output only. The current lifecycle state of the
      route.
    TypeValueValuesEnum: Output only. The route's type. Its type is determined
      by the properties of its IP address range.

  Messages:
    LabelsValue: Optional labels in key-value pair format. For more
      information about labels, see [Requirements for
      labels](https://cloud.google.com/resource-manager/docs/creating-
      managing-labels#requirements).

  Fields:
    createTime: Output only. The time the route was created.
    description: An optional description of the route.
    ipCidrRange: The destination IP address range.
    labels: Optional labels in key-value pair format. For more information
      about labels, see [Requirements for
      labels](https://cloud.google.com/resource-manager/docs/creating-
      managing-labels#requirements).
    location: Output only. The origin location of the route. Uses the
      following form: "projects/{project}/locations/{location}" Example:
      projects/1234/locations/us-central1
    name: Immutable. The name of the route. Route names must be unique. Route
      names use the following form: `projects/{project_number}/locations/globa
      l/hubs/{hub}/routeTables/{route_table_id}/routes/{route_id}`
    nextHopVpcNetwork: Immutable. The destination VPC network for packets on
      this route.
    spoke: Immutable. The spoke that this route leads to. Example:
      projects/12345/locations/global/spokes/SPOKE
    state: Output only. The current lifecycle state of the route.
    type: Output only. The route's type. Its type is determined by the
      properties of its IP address range.
    uid: Output only. The Google-generated UUID for the route. This value is
      unique across all Network Connectivity Center route resources. If a
      route is deleted and another with the same name is created, the new
      route is assigned a different `uid`.
    updateTime: Output only. The time the route was last updated.
  """

  class StateValueValuesEnum(_messages.Enum):
    r"""Output only. The current lifecycle state of the route.

    Values:
      STATE_UNSPECIFIED: No state information available
      CREATING: The resource's create operation is in progress.
      ACTIVE: The resource is active
      DELETING: The resource's delete operation is in progress.
      ACTIVATING: The resource's activate operation is in progress.
      DEACTIVATING: The resource's deactivate operation is in progress.
      ACCEPTING: The resource's accept operation is in progress.
      REJECTING: The resource's reject operation is in progress.
      UPDATING: The resource's update operation is in progress.
      INACTIVE: The resource is inactive.
      OBSOLETE: The hub associated with this spoke resource has been deleted.
        This state applies to spoke resources only.
    """
    STATE_UNSPECIFIED = 0
    CREATING = 1
    ACTIVE = 2
    DELETING = 3
    ACTIVATING = 4
    DEACTIVATING = 5
    ACCEPTING = 6
    REJECTING = 7
    UPDATING = 8
    INACTIVE = 9
    OBSOLETE = 10

  class TypeValueValuesEnum(_messages.Enum):
    r"""Output only. The route's type. Its type is determined by the
    properties of its IP address range.

    Values:
      ROUTE_TYPE_UNSPECIFIED: No route type information specified
      VPC_PRIMARY_SUBNET: The route leads to a destination within the primary
        address range of the VPC network's subnet.
      VPC_SECONDARY_SUBNET: The route leads to a destination within the
        secondary address range of the VPC network's subnet.
    """
    ROUTE_TYPE_UNSPECIFIED = 0
    VPC_PRIMARY_SUBNET = 1
    VPC_SECONDARY_SUBNET = 2

  @encoding.MapUnrecognizedFields('additionalProperties')
  class LabelsValue(_messages.Message):
    r"""Optional labels in key-value pair format. For more information about
    labels, see [Requirements for labels](https://cloud.google.com/resource-
    manager/docs/creating-managing-labels#requirements).

    Messages:
      AdditionalProperty: An additional property for a LabelsValue object.

    Fields:
      additionalProperties: Additional properties of type LabelsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a LabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  createTime = _messages.StringField(1)
  description = _messages.StringField(2)
  ipCidrRange = _messages.StringField(3)
  labels = _messages.MessageField('LabelsValue', 4)
  location = _messages.StringField(5)
  name = _messages.StringField(6)
  nextHopVpcNetwork = _messages.MessageField('NextHopVpcNetwork', 7)
  spoke = _messages.StringField(8)
  state = _messages.EnumField('StateValueValuesEnum', 9)
  type = _messages.EnumField('TypeValueValuesEnum', 10)
  uid = _messages.StringField(11)
  updateTime = _messages.StringField(12)


class RouteTable(_messages.Message):
  r"""A RouteTable object.

  Enums:
    StateValueValuesEnum: Output only. The current lifecycle state of this
      route table.

  Messages:
    LabelsValue: Optional labels in key-value pair format. For more
      information about labels, see [Requirements for
      labels](https://cloud.google.com/resource-manager/docs/creating-
      managing-labels#requirements).

  Fields:
    createTime: Output only. The time the route table was created.
    description: An optional description of the route table.
    group: Output only. The name of the group the route table is associated
      with. Groups use the following form: `projects/{project_number}/location
      s/global/hubs/{hub}/groups/{group_name}`
    labels: Optional labels in key-value pair format. For more information
      about labels, see [Requirements for
      labels](https://cloud.google.com/resource-manager/docs/creating-
      managing-labels#requirements).
    name: Immutable. The name of the route table. Route table names must be
      unique. They use the following form: `projects/{project_number}/location
      s/global/hubs/{hub}/routeTables/{route_table_id}`
    state: Output only. The current lifecycle state of this route table.
    uid: Output only. The Google-generated UUID for the route table. This
      value is unique across all route table resources. If a route table is
      deleted and another with the same name is created, the new route table
      is assigned a different `uid`.
    updateTime: Output only. The time the route table was last updated.
  """

  class StateValueValuesEnum(_messages.Enum):
    r"""Output only. The current lifecycle state of this route table.

    Values:
      STATE_UNSPECIFIED: No state information available
      CREATING: The resource's create operation is in progress.
      ACTIVE: The resource is active
      DELETING: The resource's delete operation is in progress.
      ACTIVATING: The resource's activate operation is in progress.
      DEACTIVATING: The resource's deactivate operation is in progress.
      ACCEPTING: The resource's accept operation is in progress.
      REJECTING: The resource's reject operation is in progress.
      UPDATING: The resource's update operation is in progress.
      INACTIVE: The resource is inactive.
      OBSOLETE: The hub associated with this spoke resource has been deleted.
        This state applies to spoke resources only.
    """
    STATE_UNSPECIFIED = 0
    CREATING = 1
    ACTIVE = 2
    DELETING = 3
    ACTIVATING = 4
    DEACTIVATING = 5
    ACCEPTING = 6
    REJECTING = 7
    UPDATING = 8
    INACTIVE = 9
    OBSOLETE = 10

  @encoding.MapUnrecognizedFields('additionalProperties')
  class LabelsValue(_messages.Message):
    r"""Optional labels in key-value pair format. For more information about
    labels, see [Requirements for labels](https://cloud.google.com/resource-
    manager/docs/creating-managing-labels#requirements).

    Messages:
      AdditionalProperty: An additional property for a LabelsValue object.

    Fields:
      additionalProperties: Additional properties of type LabelsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a LabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  createTime = _messages.StringField(1)
  description = _messages.StringField(2)
  group = _messages.StringField(3)
  labels = _messages.MessageField('LabelsValue', 4)
  name = _messages.StringField(5)
  state = _messages.EnumField('StateValueValuesEnum', 6)
  uid = _messages.StringField(7)
  updateTime = _messages.StringField(8)


class RouterApplianceInstance(_messages.Message):
  r"""A router appliance instance is a Compute Engine virtual machine (VM)
  instance that acts as a BGP speaker. A router appliance instance is
  specified by the URI of the VM and the internal IP address of one of the
  VM's network interfaces.

  Fields:
    ipAddress: The IP address on the VM to use for peering.
    virtualMachine: The URI of the VM.
  """

  ipAddress = _messages.StringField(1)
  virtualMachine = _messages.StringField(2)


class RoutingVPC(_messages.Message):
  r"""RoutingVPC contains information about the VPC networks associated with
  the spokes of a Network Connectivity Center hub.

  Fields:
    requiredForNewSiteToSiteDataTransferSpokes: Output only. If true,
      indicates that this VPC network is currently associated with spokes that
      use the data transfer feature (spokes where the
      site_to_site_data_transfer field is set to true). If you create new
      spokes that use data transfer, they must be associated with this VPC
      network. At most, one VPC network will have this field set to true.
    uri: The URI of the VPC network.
  """

  requiredForNewSiteToSiteDataTransferSpokes = _messages.BooleanField(1)
  uri = _messages.StringField(2)


class ServiceClass(_messages.Message):
  r"""The ServiceClass resource. Next id: 9

  Messages:
    LabelsValue: User-defined labels.

  Fields:
    createTime: Output only. Time when the ServiceClass was created.
    description: A description of this resource.
    etag: Optional. The etag is computed by the server, and may be sent on
      update and delete requests to ensure the client has an up-to-date value
      before proceeding.
    labels: User-defined labels.
    name: Immutable. The name of a ServiceClass resource. Format:
      projects/{project}/locations/{location}/serviceClasses/{service_class}
      See: https://google.aip.dev/122#fields-representing-resource-names
    serviceClass: Output only. The generated service class name. Use this name
      to refer to the Service class in Service Connection Maps and Service
      Connection Policies.
    updateTime: Output only. Time when the ServiceClass was updated.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class LabelsValue(_messages.Message):
    r"""User-defined labels.

    Messages:
      AdditionalProperty: An additional property for a LabelsValue object.

    Fields:
      additionalProperties: Additional properties of type LabelsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a LabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  createTime = _messages.StringField(1)
  description = _messages.StringField(2)
  etag = _messages.StringField(3)
  labels = _messages.MessageField('LabelsValue', 4)
  name = _messages.StringField(5)
  serviceClass = _messages.StringField(6)
  updateTime = _messages.StringField(7)


class ServiceConnectionMap(_messages.Message):
  r"""The ServiceConnectionMap resource. Next id: 15

  Enums:
    InfrastructureValueValuesEnum: Output only. The infrastructure used for
      connections between consumers/producers.

  Messages:
    LabelsValue: User-defined labels.

  Fields:
    consumerPscConfigs: The PSC configurations on consumer side.
    consumerPscConnections: Output only. PSC connection details on consumer
      side.
    createTime: Output only. Time when the ServiceConnectionMap was created.
    description: A description of this resource.
    etag: Optional. The etag is computed by the server, and may be sent on
      update and delete requests to ensure the client has an up-to-date value
      before proceeding.
    infrastructure: Output only. The infrastructure used for connections
      between consumers/producers.
    labels: User-defined labels.
    name: Immutable. The name of a ServiceConnectionMap. Format: projects/{pro
      ject}/locations/{location}/serviceConnectionMaps/{service_connection_map
      } See: https://google.aip.dev/122#fields-representing-resource-names
    producerPscConfigs: The PSC configurations on producer side.
    serviceClass: The service class identifier this ServiceConnectionMap is
      for. The user of ServiceConnectionMap create API needs to have
      networkconnecitivty.serviceclasses.use iam permission for the service
      class.
    serviceClassUri: Output only. The service class uri this
      ServiceConnectionMap is for.
    token: The token provided by the consumer. This token authenticates that
      the consumer can create a connecton within the specified project and
      network.
    updateTime: Output only. Time when the ServiceConnectionMap was updated.
  """

  class InfrastructureValueValuesEnum(_messages.Enum):
    r"""Output only. The infrastructure used for connections between
    consumers/producers.

    Values:
      INFRASTRUCTURE_UNSPECIFIED: An invalid infrastructure as the default
        case.
      PSC: Private Service Connect is used for connections.
    """
    INFRASTRUCTURE_UNSPECIFIED = 0
    PSC = 1

  @encoding.MapUnrecognizedFields('additionalProperties')
  class LabelsValue(_messages.Message):
    r"""User-defined labels.

    Messages:
      AdditionalProperty: An additional property for a LabelsValue object.

    Fields:
      additionalProperties: Additional properties of type LabelsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a LabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  consumerPscConfigs = _messages.MessageField('ConsumerPscConfig', 1, repeated=True)
  consumerPscConnections = _messages.MessageField('ConsumerPscConnection', 2, repeated=True)
  createTime = _messages.StringField(3)
  description = _messages.StringField(4)
  etag = _messages.StringField(5)
  infrastructure = _messages.EnumField('InfrastructureValueValuesEnum', 6)
  labels = _messages.MessageField('LabelsValue', 7)
  name = _messages.StringField(8)
  producerPscConfigs = _messages.MessageField('ProducerPscConfig', 9, repeated=True)
  serviceClass = _messages.StringField(10)
  serviceClassUri = _messages.StringField(11)
  token = _messages.StringField(12)
  updateTime = _messages.StringField(13)


class ServiceConnectionPolicy(_messages.Message):
  r"""The ServiceConnectionPolicy resource. Next id: 12

  Enums:
    InfrastructureValueValuesEnum: Output only. The type of underlying
      resources used to create the connection.

  Messages:
    LabelsValue: User-defined labels.

  Fields:
    createTime: Output only. Time when the ServiceConnectionMap was created.
    description: A description of this resource.
    etag: Optional. The etag is computed by the server, and may be sent on
      update and delete requests to ensure the client has an up-to-date value
      before proceeding.
    infrastructure: Output only. The type of underlying resources used to
      create the connection.
    labels: User-defined labels.
    name: Immutable. The name of a ServiceConnectionPolicy. Format: projects/{
      project}/locations/{location}/serviceConnectionPolicies/{service_connect
      ion_policy} See: https://google.aip.dev/122#fields-representing-
      resource-names
    network: The resource path of the consumer network. Example: -
      projects/{projectNumOrId}/global/networks/{resourceId}.
    pscConfig: Configuration used for Private Service Connect connections.
      Used when Infrastructure is PSC.
    pscConnections: Output only. [Output only] Information about each Private
      Service Connect connection.
    serviceClass: The service class identifier for which this
      ServiceConnectionPolicy is for. The service class identifier is a
      unique, symbolic representation of a ServiceClass. It is provided by the
      Service Producer. Google services have a prefix of gcp. For example,
      gcp-cloud-sql. 3rd party services do not. For example, test-
      service-a3dfcx.
    updateTime: Output only. Time when the ServiceConnectionMap was updated.
  """

  class InfrastructureValueValuesEnum(_messages.Enum):
    r"""Output only. The type of underlying resources used to create the
    connection.

    Values:
      INFRASTRUCTURE_UNSPECIFIED: An invalid infrastructure as the default
        case.
      PSC: Private Service Connect is used for connections.
    """
    INFRASTRUCTURE_UNSPECIFIED = 0
    PSC = 1

  @encoding.MapUnrecognizedFields('additionalProperties')
  class LabelsValue(_messages.Message):
    r"""User-defined labels.

    Messages:
      AdditionalProperty: An additional property for a LabelsValue object.

    Fields:
      additionalProperties: Additional properties of type LabelsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a LabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  createTime = _messages.StringField(1)
  description = _messages.StringField(2)
  etag = _messages.StringField(3)
  infrastructure = _messages.EnumField('InfrastructureValueValuesEnum', 4)
  labels = _messages.MessageField('LabelsValue', 5)
  name = _messages.StringField(6)
  network = _messages.StringField(7)
  pscConfig = _messages.MessageField('PscConfig', 8)
  pscConnections = _messages.MessageField('PscConnection', 9, repeated=True)
  serviceClass = _messages.StringField(10)
  updateTime = _messages.StringField(11)


class ServiceConnectionToken(_messages.Message):
  r"""The ServiceConnectionToken resource. Next id: 10

  Messages:
    LabelsValue: User-defined labels.

  Fields:
    createTime: Output only. Time when the ServiceConnectionToken was created.
    description: A description of this resource.
    etag: Optional. The etag is computed by the server, and may be sent on
      update and delete requests to ensure the client has an up-to-date value
      before proceeding.
    expireTime: Output only. The time to which this token is valid.
    labels: User-defined labels.
    name: Immutable. The name of a ServiceConnectionToken. Format: projects/{p
      roject}/locations/{location}/ServiceConnectionTokens/{service_connection
      _token} See: https://google.aip.dev/122#fields-representing-resource-
      names
    network: The resource path of the network associated with this token.
      Example: projects/{projectNumOrId}/global/networks/{resourceId}.
    token: Output only. The token generated by Automation.
    updateTime: Output only. Time when the ServiceConnectionToken was updated.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class LabelsValue(_messages.Message):
    r"""User-defined labels.

    Messages:
      AdditionalProperty: An additional property for a LabelsValue object.

    Fields:
      additionalProperties: Additional properties of type LabelsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a LabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  createTime = _messages.StringField(1)
  description = _messages.StringField(2)
  etag = _messages.StringField(3)
  expireTime = _messages.StringField(4)
  labels = _messages.MessageField('LabelsValue', 5)
  name = _messages.StringField(6)
  network = _messages.StringField(7)
  token = _messages.StringField(8)
  updateTime = _messages.StringField(9)


class SetIamPolicyRequest(_messages.Message):
  r"""Request message for `SetIamPolicy` method.

  Fields:
    policy: REQUIRED: The complete policy to be applied to the `resource`. The
      size of the policy is limited to a few 10s of KB. An empty policy is a
      valid policy but certain Google Cloud services (such as Projects) might
      reject them.
    updateMask: OPTIONAL: A FieldMask specifying which fields of the policy to
      modify. Only the fields in the mask will be modified. If no mask is
      provided, the following default mask is used: `paths: "bindings, etag"`
  """

  policy = _messages.MessageField('Policy', 1)
  updateMask = _messages.StringField(2)


class Spoke(_messages.Message):
  r"""A Network Connectivity Center spoke represents one or more network
  connectivity resources. When you create a spoke, you associate it with a
  hub. You must also identify a value for exactly one of the following fields:
  * linked_vpn_tunnels * linked_interconnect_attachments *
  linked_router_appliance_instances * linked_vpc_network

  Enums:
    SpokeTypeValueValuesEnum: Output only. The type of resource associated
      with the spoke.
    StateValueValuesEnum: Output only. The current lifecycle state of this
      spoke.

  Messages:
    LabelsValue: Optional labels in key-value pair format. For more
      information about labels, see [Requirements for
      labels](https://cloud.google.com/resource-manager/docs/creating-
      managing-labels#requirements).

  Fields:
    createTime: Output only. The time the spoke was created.
    description: An optional description of the spoke.
    group: Optional. The name of the group that this spoke is associated with.
    hub: Immutable. The name of the hub that this spoke is attached to.
    labels: Optional labels in key-value pair format. For more information
      about labels, see [Requirements for
      labels](https://cloud.google.com/resource-manager/docs/creating-
      managing-labels#requirements).
    linkedInterconnectAttachments: VLAN attachments that are associated with
      the spoke.
    linkedRouterApplianceInstances: Router appliance instances that are
      associated with the spoke.
    linkedVpcNetwork: Optional. VPC network that is associated with the spoke.
    linkedVpnTunnels: VPN tunnels that are associated with the spoke.
    name: Immutable. The name of the spoke. Spoke names must be unique. They
      use the following form:
      `projects/{project_number}/locations/{region}/spokes/{spoke_id}`
    reasons: Output only. The reasons for current state of the spoke. Only
      present when the spoke is in the `INACTIVE` state.
    spokeType: Output only. The type of resource associated with the spoke.
    state: Output only. The current lifecycle state of this spoke.
    uniqueId: Output only. The Google-generated UUID for the spoke. This value
      is unique across all spoke resources. If a spoke is deleted and another
      with the same name is created, the new spoke is assigned a different
      `unique_id`.
    updateTime: Output only. The time the spoke was last updated.
  """

  class SpokeTypeValueValuesEnum(_messages.Enum):
    r"""Output only. The type of resource associated with the spoke.

    Values:
      SPOKE_TYPE_UNSPECIFIED: Unspecified spoke type.
      VPN_TUNNEL: Spokes associated with VPN tunnels.
      INTERCONNECT_ATTACHMENT: Spokes associated with VLAN attachments.
      ROUTER_APPLIANCE: Spokes associated with router appliance instances.
      VPC_NETWORK: Spokes associated with VPC networks.
    """
    SPOKE_TYPE_UNSPECIFIED = 0
    VPN_TUNNEL = 1
    INTERCONNECT_ATTACHMENT = 2
    ROUTER_APPLIANCE = 3
    VPC_NETWORK = 4

  class StateValueValuesEnum(_messages.Enum):
    r"""Output only. The current lifecycle state of this spoke.

    Values:
      STATE_UNSPECIFIED: No state information available
      CREATING: The resource's create operation is in progress.
      ACTIVE: The resource is active
      DELETING: The resource's delete operation is in progress.
      ACTIVATING: The resource's activate operation is in progress.
      DEACTIVATING: The resource's deactivate operation is in progress.
      ACCEPTING: The resource's accept operation is in progress.
      REJECTING: The resource's reject operation is in progress.
      UPDATING: The resource's update operation is in progress.
      INACTIVE: The resource is inactive.
      OBSOLETE: The hub associated with this spoke resource has been deleted.
        This state applies to spoke resources only.
    """
    STATE_UNSPECIFIED = 0
    CREATING = 1
    ACTIVE = 2
    DELETING = 3
    ACTIVATING = 4
    DEACTIVATING = 5
    ACCEPTING = 6
    REJECTING = 7
    UPDATING = 8
    INACTIVE = 9
    OBSOLETE = 10

  @encoding.MapUnrecognizedFields('additionalProperties')
  class LabelsValue(_messages.Message):
    r"""Optional labels in key-value pair format. For more information about
    labels, see [Requirements for labels](https://cloud.google.com/resource-
    manager/docs/creating-managing-labels#requirements).

    Messages:
      AdditionalProperty: An additional property for a LabelsValue object.

    Fields:
      additionalProperties: Additional properties of type LabelsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a LabelsValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  createTime = _messages.StringField(1)
  description = _messages.StringField(2)
  group = _messages.StringField(3)
  hub = _messages.StringField(4)
  labels = _messages.MessageField('LabelsValue', 5)
  linkedInterconnectAttachments = _messages.MessageField('LinkedInterconnectAttachments', 6)
  linkedRouterApplianceInstances = _messages.MessageField('LinkedRouterApplianceInstances', 7)
  linkedVpcNetwork = _messages.MessageField('LinkedVpcNetwork', 8)
  linkedVpnTunnels = _messages.MessageField('LinkedVpnTunnels', 9)
  name = _messages.StringField(10)
  reasons = _messages.MessageField('StateReason', 11, repeated=True)
  spokeType = _messages.EnumField('SpokeTypeValueValuesEnum', 12)
  state = _messages.EnumField('StateValueValuesEnum', 13)
  uniqueId = _messages.StringField(14)
  updateTime = _messages.StringField(15)


class SpokeStateCount(_messages.Message):
  r"""The number of spokes that are in a particular state and associated with
  a given hub.

  Enums:
    StateValueValuesEnum: Output only. The state of the spokes.

  Fields:
    count: Output only. The total number of spokes that are in this state and
      associated with a given hub.
    state: Output only. The state of the spokes.
  """

  class StateValueValuesEnum(_messages.Enum):
    r"""Output only. The state of the spokes.

    Values:
      STATE_UNSPECIFIED: No state information available
      CREATING: The resource's create operation is in progress.
      ACTIVE: The resource is active
      DELETING: The resource's delete operation is in progress.
      ACTIVATING: The resource's activate operation is in progress.
      DEACTIVATING: The resource's deactivate operation is in progress.
      ACCEPTING: The resource's accept operation is in progress.
      REJECTING: The resource's reject operation is in progress.
      UPDATING: The resource's update operation is in progress.
      INACTIVE: The resource is inactive.
      OBSOLETE: The hub associated with this spoke resource has been deleted.
        This state applies to spoke resources only.
    """
    STATE_UNSPECIFIED = 0
    CREATING = 1
    ACTIVE = 2
    DELETING = 3
    ACTIVATING = 4
    DEACTIVATING = 5
    ACCEPTING = 6
    REJECTING = 7
    UPDATING = 8
    INACTIVE = 9
    OBSOLETE = 10

  count = _messages.IntegerField(1)
  state = _messages.EnumField('StateValueValuesEnum', 2)


class SpokeStateReasonCount(_messages.Message):
  r"""The number of spokes in the hub that are inactive for this reason.

  Enums:
    StateReasonCodeValueValuesEnum: Output only. The reason that a spoke is
      inactive.

  Fields:
    count: Output only. The total number of spokes that are inactive for a
      particular reason and associated with a given hub.
    stateReasonCode: Output only. The reason that a spoke is inactive.
  """

  class StateReasonCodeValueValuesEnum(_messages.Enum):
    r"""Output only. The reason that a spoke is inactive.

    Values:
      CODE_UNSPECIFIED: No information available.
      PENDING_REVIEW: The proposed spoke is pending review.
      REJECTED: The proposed spoke has been rejected by the hub administrator.
      PAUSED: The spoke has been deactivated internally.
      FAILED: Network Connectivity Center encountered errors while accepting
        the spoke.
    """
    CODE_UNSPECIFIED = 0
    PENDING_REVIEW = 1
    REJECTED = 2
    PAUSED = 3
    FAILED = 4

  count = _messages.IntegerField(1)
  stateReasonCode = _messages.EnumField('StateReasonCodeValueValuesEnum', 2)


class SpokeSummary(_messages.Message):
  r"""Summarizes information about the spokes associated with a hub. The
  summary includes a count of spokes according to type and according to state.
  If any spokes are inactive, the summary also lists the reasons they are
  inactive, including a count for each reason.

  Fields:
    spokeStateCounts: Output only. Counts the number of spokes that are in
      each state and associated with a given hub.
    spokeStateReasonCounts: Output only. Counts the number of spokes that are
      inactive for each possible reason and associated with a given hub.
    spokeTypeCounts: Output only. Counts the number of spokes of each type
      that are associated with a specific hub.
  """

  spokeStateCounts = _messages.MessageField('SpokeStateCount', 1, repeated=True)
  spokeStateReasonCounts = _messages.MessageField('SpokeStateReasonCount', 2, repeated=True)
  spokeTypeCounts = _messages.MessageField('SpokeTypeCount', 3, repeated=True)


class SpokeTypeCount(_messages.Message):
  r"""The number of spokes of a given type that are associated with a specific
  hub. The type indicates what kind of resource is associated with the spoke.

  Enums:
    SpokeTypeValueValuesEnum: Output only. The type of the spokes.

  Fields:
    count: Output only. The total number of spokes of this type that are
      associated with the hub.
    spokeType: Output only. The type of the spokes.
  """

  class SpokeTypeValueValuesEnum(_messages.Enum):
    r"""Output only. The type of the spokes.

    Values:
      SPOKE_TYPE_UNSPECIFIED: Unspecified spoke type.
      VPN_TUNNEL: Spokes associated with VPN tunnels.
      INTERCONNECT_ATTACHMENT: Spokes associated with VLAN attachments.
      ROUTER_APPLIANCE: Spokes associated with router appliance instances.
      VPC_NETWORK: Spokes associated with VPC networks.
    """
    SPOKE_TYPE_UNSPECIFIED = 0
    VPN_TUNNEL = 1
    INTERCONNECT_ATTACHMENT = 2
    ROUTER_APPLIANCE = 3
    VPC_NETWORK = 4

  count = _messages.IntegerField(1)
  spokeType = _messages.EnumField('SpokeTypeValueValuesEnum', 2)


class StandardQueryParameters(_messages.Message):
  r"""Query parameters accepted by all methods.

  Enums:
    FXgafvValueValuesEnum: V1 error format.
    AltValueValuesEnum: Data format for response.

  Fields:
    f__xgafv: V1 error format.
    access_token: OAuth access token.
    alt: Data format for response.
    callback: JSONP
    fields: Selector specifying which fields to include in a partial response.
    key: API key. Your API key identifies your project and provides you with
      API access, quota, and reports. Required unless you provide an OAuth 2.0
      token.
    oauth_token: OAuth 2.0 token for the current user.
    prettyPrint: Returns response with indentations and line breaks.
    quotaUser: Available to use for quota purposes for server-side
      applications. Can be any arbitrary string assigned to a user, but should
      not exceed 40 characters.
    trace: A tracing token of the form "token:<tokenid>" to include in api
      requests.
    uploadType: Legacy upload protocol for media (e.g. "media", "multipart").
    upload_protocol: Upload protocol for media (e.g. "raw", "multipart").
  """

  class AltValueValuesEnum(_messages.Enum):
    r"""Data format for response.

    Values:
      json: Responses with Content-Type of application/json
      media: Media download with context-dependent Content-Type
      proto: Responses with Content-Type of application/x-protobuf
    """
    json = 0
    media = 1
    proto = 2

  class FXgafvValueValuesEnum(_messages.Enum):
    r"""V1 error format.

    Values:
      _1: v1 error format
      _2: v2 error format
    """
    _1 = 0
    _2 = 1

  f__xgafv = _messages.EnumField('FXgafvValueValuesEnum', 1)
  access_token = _messages.StringField(2)
  alt = _messages.EnumField('AltValueValuesEnum', 3, default='json')
  callback = _messages.StringField(4)
  fields = _messages.StringField(5)
  key = _messages.StringField(6)
  oauth_token = _messages.StringField(7)
  prettyPrint = _messages.BooleanField(8, default=True)
  quotaUser = _messages.StringField(9)
  trace = _messages.StringField(10)
  uploadType = _messages.StringField(11)
  upload_protocol = _messages.StringField(12)


class StateReason(_messages.Message):
  r"""The reason a spoke is inactive.

  Enums:
    CodeValueValuesEnum: The code associated with this reason.

  Fields:
    code: The code associated with this reason.
    message: Human-readable details about this reason.
    userDetails: Additional information provided by the user in the
      RejectSpoke call.
  """

  class CodeValueValuesEnum(_messages.Enum):
    r"""The code associated with this reason.

    Values:
      CODE_UNSPECIFIED: No information available.
      PENDING_REVIEW: The proposed spoke is pending review.
      REJECTED: The proposed spoke has been rejected by the hub administrator.
      PAUSED: The spoke has been deactivated internally.
      FAILED: Network Connectivity Center encountered errors while accepting
        the spoke.
    """
    CODE_UNSPECIFIED = 0
    PENDING_REVIEW = 1
    REJECTED = 2
    PAUSED = 3
    FAILED = 4

  code = _messages.EnumField('CodeValueValuesEnum', 1)
  message = _messages.StringField(2)
  userDetails = _messages.StringField(3)


class TestIamPermissionsRequest(_messages.Message):
  r"""Request message for `TestIamPermissions` method.

  Fields:
    permissions: The set of permissions to check for the `resource`.
      Permissions with wildcards (such as `*` or `storage.*`) are not allowed.
      For more information see [IAM
      Overview](https://cloud.google.com/iam/docs/overview#permissions).
  """

  permissions = _messages.StringField(1, repeated=True)


class TestIamPermissionsResponse(_messages.Message):
  r"""Response message for `TestIamPermissions` method.

  Fields:
    permissions: A subset of `TestPermissionsRequest.permissions` that the
      caller is allowed.
  """

  permissions = _messages.StringField(1, repeated=True)


class VirtualMachine(_messages.Message):
  r"""VM instances to which this policy-based route applies to.

  Fields:
    tags: Optional. A list of VM instance tags the this policy-based route
      applies to. VM instances that have ANY of tags specified here will
      install this PBR.
  """

  tags = _messages.StringField(1, repeated=True)


class Warnings(_messages.Message):
  r"""Informational warning message.

  Enums:
    CodeValueValuesEnum: Output only. A warning code, if applicable.

  Messages:
    DataValue: Output only. Metadata about this warning in key: value format.
      The key should provides more detail on the warning being returned. For
      example, for warnings where there are no results in a list request for a
      particular zone, this key might be scope and the key value might be the
      zone name. Other examples might be a key indicating a deprecated
      resource and a suggested replacement.

  Fields:
    code: Output only. A warning code, if applicable.
    data: Output only. Metadata about this warning in key: value format. The
      key should provides more detail on the warning being returned. For
      example, for warnings where there are no results in a list request for a
      particular zone, this key might be scope and the key value might be the
      zone name. Other examples might be a key indicating a deprecated
      resource and a suggested replacement.
    warningMessage: Output only. A human-readable description of the warning
      code.
  """

  class CodeValueValuesEnum(_messages.Enum):
    r"""Output only. A warning code, if applicable.

    Values:
      WARNING_UNSPECIFIED: Default value.
      RESOURCE_NOT_ACTIVE: The policy-based route is not active and
        functioning. Common causes are the dependent network was deleted or
        the resource project was turned off.
      RESOURCE_BEING_MODIFIED: The policy-based route is being modified (e.g.
        created/deleted) at this time.
    """
    WARNING_UNSPECIFIED = 0
    RESOURCE_NOT_ACTIVE = 1
    RESOURCE_BEING_MODIFIED = 2

  @encoding.MapUnrecognizedFields('additionalProperties')
  class DataValue(_messages.Message):
    r"""Output only. Metadata about this warning in key: value format. The key
    should provides more detail on the warning being returned. For example,
    for warnings where there are no results in a list request for a particular
    zone, this key might be scope and the key value might be the zone name.
    Other examples might be a key indicating a deprecated resource and a
    suggested replacement.

    Messages:
      AdditionalProperty: An additional property for a DataValue object.

    Fields:
      additionalProperties: Additional properties of type DataValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a DataValue object.

      Fields:
        key: Name of the additional property.
        value: A string attribute.
      """

      key = _messages.StringField(1)
      value = _messages.StringField(2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  code = _messages.EnumField('CodeValueValuesEnum', 1)
  data = _messages.MessageField('DataValue', 2)
  warningMessage = _messages.StringField(3)


encoding.AddCustomJsonFieldMapping(
    StandardQueryParameters, 'f__xgafv', '$.xgafv')
encoding.AddCustomJsonEnumMapping(
    StandardQueryParameters.FXgafvValueValuesEnum, '_1', '1')
encoding.AddCustomJsonEnumMapping(
    StandardQueryParameters.FXgafvValueValuesEnum, '_2', '2')
