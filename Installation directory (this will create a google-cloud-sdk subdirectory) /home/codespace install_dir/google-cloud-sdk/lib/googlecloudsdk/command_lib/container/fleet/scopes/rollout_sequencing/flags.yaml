default_upgrade_soaking:
  arg_name: default-upgrade-soaking
  type: googlecloudsdk.core.util.times:ParseDuration
  help_text: |
    Configures the default soaking duration for each upgrade propagating through the current scope
    to become "COMPLETE". Soaking begins after all clusters in the scope are on the target version,
    or after 30 days if all cluster upgrades are not complete. Once an upgrade state becomes
    "COMPLETE", it will automatically be propagated to the downstream scope. Max is 30 days.

    See `$ gcloud topic datetimes` for information on duration formats.

    To configure Rollout Sequencing for a given scope, ``SCOPE_NAME'', this attribute must be set.
    To do this while specifying a default soaking duration of 7 days, run:

      $ {command} SCOPE_NAME default-upgrade-soaking=7d

add_upgrade_soaking_override:
  arg_name: add-upgrade-soaking-override
  required: true
  type: googlecloudsdk.core.util.times:ParseDuration
  help_text: |
    Overrides the soaking time for a particular upgrade name and version propagating through the
    current scope. Set soaking to 0 days to bypass soaking and fast-forward the upgrade to the
    downstream scope.

    See `$ gcloud topic datetimes` for information on duration formats.

upgrade_selector:
  arg_name: upgrade-selector
  required: true
  type: "googlecloudsdk.command_lib.container.fleet.scopes.rollout_sequencing.util:UpgradeSelector:"
  help_text: | #TODO(b/233397411): Add link to documentation here.
    Name and version of the upgrade to be overridden where version is a full GKE version. Currently,
    name can be either `k8s_control_plane` or `k8s_node`.

upstream_scope:
  arg_name: upstream-scope
  type: str
  help_text: | #TODO(b/233397411): Add link to documentation here.
    Full resource name of the upstream scope in the format of
    projects/{project}/locations/{location}/scopes/{scope}. GKE will finish upgrades on the upstream
    scope before applying the same upgrades to the current scope.

    To configure the upstream scope for ``SCOPE_NAME'', run:

      $ {command} SCOPE_NAME \
        --upstream-scope=projects/{upstream_project}/locations/global/scopes/{upstream_scope}
